9640 and 99/4A Assembler
                                                    Page 0001
0001                         TITL   'FORTRAN MISC SUPPORT ROUTINES FOR WINDOWING'
0002                         IDT    'MISC'
0003                 **
0004                 **  ADR - RETURN ADDRESS OF ARGUMENT AS ARGUMENT
0005                 **
0006 0000   0000             DEF    ADR
0007 0000   0012             DEF    ZERO
0008 0000   003E             DEF    BUILDC
0009                 *
0010                 *
0011                 * ADR
0012                 *
0013                 ADR
0014 0000   FFFF             DATA  -1
0015 0002   0072'            DATA  BASEAD
0016 0004   C0E0             MOV   @BASEAD,R3
0016 0006   0072'     
0017 0008   C2E0             MOV   @RETUAD,R11
0017 000A   0074'     
0018 000C   C160             MOV   @ARG1,R5          ; RETURN THIS AS ADDRESS
0018 000E   0076'     
0019 0010   045B             B     *R11
0020                 **
0021                 **  ZERO - ZERO TERMINATE A STRING (TO MAKE COMPATIBLE WITH c)
0022                 **
0023                 **      call zero ( string1, string2 )
0024                 **
0025                 **  where:   string1 is the input string
0026                 **           string2 is a copy with zero termination
0027                 **
0028                 ZERO
0029 0012   FFFE             DATA  -2                ; 2 ARGUMENTS
0030 0014   0072'            DATA  BASEAD
0031 0016   C060             MOV   @ARG1,R1          ; MOVE FROM ADDRESS
0031 0018   0076'     
0032 001A   C0A0             MOV   @ARG2,R2          ; MOVE TO ADDRESS
0032 001C   0078'     
0033                 *
0034 0000   001E     MOVLOP  EQU  $
0035 001E   9811             CB    *R1,@KBLANK       ; IS THIS A BLANK
0035 0020   003C'     
0036 0022   1305             JEQ   MOVDON            ; BRIF YES, DONE
0037 0024   9811             CB    *R1,@KZERO        ; IS IT ALREADY ZERO TERMINATED?
0037 0026   003D'     
0038 0028   1302             JEQ   MOVDON
0039 002A   DCB1             MOVB  *R1+,*R2+         ; ELSE, MOVE IT
0040 002C   10F8             JMP   MOVLOP
0041                 *
0042 0000   002E     MOVDON  EQU   $
0043 002E   04C1             CLR   R1
0044 0030   D481             MOVB  R1,*R2            ; ZERO TERMINATE THE STRING
0045 0032   C0E0             MOV   @BASEAD,R3
0045 0034   0072'     
0046 0036   C2E0             MOV   @RETUAD,R11
0046 0038   0074'     
0047 003A   045B             B     *R11
0048                 *
0049                 KBLANK  TEXT  ' '
0050 003D   0000     KZERO   BYTE  0
0051                         EVEN
0052                 **
0053                 ** BUILDC - BUILD A CHARACTER ARRAY, SIMULATING A C TEXT POINTER ARRAY
0054                 **
0055                 **  ADR = BUILDC ( TEXT_ARRAY_START, #CHARS, #ELEMENTS )
0056                 **
0057 0000   003E     BUILDC  EQU  $
0058 003E   FFFD             DATA -3                 ; 3 ARGUMENTS
0059 0040   0072'            DATA BASEAD
0060                 *
0061 0042   C060             MOV  @ARG1,R1           ; GET START ADDRESS OF TEXT ARRAY
0061 0044   0076'     
0062 0046   C0A0             MOV  @ARG2,R2           ; GET # CHARS IN ARRAY
0062 0048   0078'     
0063 004A   C092             MOV  *R2,R2
0064 004C   C0E0             MOV  @ARG3,R3           ; GET # ELEMENTS IN ARRAY
9640 and 99/4A Assembler
FORTRAN MISC SUPPORT ROUTINES FOR WINDOWING         Page 0002
0064 004E   007A'     
0065 0050   C0D3             MOV  *R3,R3
0066                 *
0067 0052   C120             MOV  @SBUFFER,R4        ; START OF MY BUFFER POINTER
0067 0054   007C'     
0068                 **
0069 0000   0056     MAKEARY EQU  $
0070 0056   CD01             MOV  R1,*R4+            ; SAVE NEXT POINTER
0071 0058   A042             A    R2,R1              ; + # CHARS IN ARRAY
0072 005A   0603             DEC  R3
0073 005C   16FC             JNE  MAKEARY
0074                 *
0075 005E   C160             MOV  @SBUFFER,R5        ; START OF CURRENT BUFFER
0075 0060   007C'     
0076 0062   C804             MOV  R4,@SBUFFER        ; UPDATE POINTER
0076 0064   007C'     
0077 0066   C0E0             MOV  @BASEAD,R3
0077 0068   0072'     
0078 006A   C2E0             MOV  @RETUAD,R11
0078 006C   0074'     
0079 006E   C145             MOV  R5,R5
0080 0070   045B             B    *R11
0081                 *
0082                 *  ARGUMENTS
0083                 *
0084 0072   0000     BASEAD  BSS   2                 ; BASE ADDRESS
0085 0074   0000     RETUAD  BSS   2                 ; RETURN ADDRESS
0086 0076   0000     ARG1    BSS   2                 ; 4 ARGUMENTS
0087 0078   0000     ARG2    BSS   2
0088 007A   0000     ARG3    BSS   2
0089                 *
0090 007C   007E'    SBUFFER DATA  BUFFER            ; START OF BUFFER
0091 007E   0000     BUFFER  BSS   500               ; UP TO 250 ENTRIES
0092                         END
