        TITL   'FORTRAN INTERTASK COMMUNICATION SUPPORT ROUTINES'
        IDT    'FMISC'
**
** call  awaken   ( pagezero )
**   wakes the child task
**
** call  sleep    ( pagezero )
**   puts the child task to sleep
**
** call forbid   ()
**   forbid multi-tasking
**
** call allow    ()
**   allow  multi-tasking
**
** integer function identt ( dummy )
**   Returns the page number of the parent task (from >e8 in page0)
**
** (c) Copyright 1993 by LGMA Products
**
	DEF  FORBID		; FORBID TASK FROM RUNNING
	DEF  ALLOW		; ALLOW TASK TO RUN
	DEF  IDENTT		; IDENTIFY THE PARENT TASK
	DEF  IDENTP	        ; IDENTIFY MY PAGE ZERO TASK
**
	UNL
	COPY ":TIC/INCLUDES/UTILITY_I"
	LIST
*
*  PAGE ZERO TASK EQUATES AND OTHERS
*
COTASK	EQU  >00E8		; PARENT TASK PAGE NUMBER
STATE	EQU  >0102		; COMMAND PROCESS STATE
SLICE	EQU  >0103		; SET SLICE OF LIFE
PNAME	EQU  >0104		; NAME OF THIS TASK
PLENGTH EQU  8			; # CHARS IN TASK NAME
MMRREG	EQU  >F110		; MEMORY MAP REGISTERS
*
** PROCESS STATES
*
ACTIVE	EQU  >0000		; ACTIVE TASK PROCESS STATE
SLEEPY	EQU  >FD00		; TASK IS ASLEEP
LOCKMU	EQU  >FE00		; LOCKED MULTITASKING
**
** IDENTIFYPAGE - IDENTIFY MY PAGE ZERO NUMBER
**
IDENTP
	DATA 0
	DATA BASEAD		; TEMPS AREA
	CLR  R8
	MOVB @MMRREG,R8		; GET MY PAGE ZERO NUMBER
	SWPB R8
	MOV  @BASEAD,R3
	MOV  @RETUAD,R11
	MOV  R8,R5
	B    *R11
*
** IDENTIFYPARENT - IDENTIFY THE PARENT TASK PAGE 0 ADDRESS
**
IDENTT
	DATA -1			; ONE DUMMY ARGUMENT
	DATA BASEAD
	MOV  @BASEAD,R3
	MOV  @RETUAD,R11
	MOV  @COTASK,R5		; GET COTASK ID
	B    *R11
**
** FORBID - FORBID MULTI-TASKING
**
FORBID
	DATA 0
	DATA BASEAD
	LI   R0,LOCKMU		; LOCK MULTI-TASKING
	MOVB R0,@STATE
	MOV  @BASEAD,R3
	MOV  @RETUAD,R11
	B    *R11
**
** ALLOW  - ALLOW MULTI-TASKING
**
ALLOW
	DATA 0
	DATA BASEAD
	LI   R0,ACTIVE
	MOVB R0,@STATE		; ALLOW MULTI-TASKING
	MOV  @BASEAD,R3
	MOV  @RETUAD,R11
	B    *R11
*
BASEAD  BSS  2
RETUAD  BSS  2
ARG1	BSS  2
*
	END
