	TITL 'COLOR SEARCH'
	IDT  'CLRSRC'
*
*  CLRSRC   :   COLOR SEARCH
*
*  CALLING SEQUENCE:
*
*	CALL CLRSRC ( IXCORD, IYCORD, ICOLOR, IDIRECT, 
*		      NXCORD, NYCORD )
*
*  WHERE:
*
*	IXCORD  :  IS THE X-COORDINATE OF SOURCE POINT
*	IYCORD  :  IS THE Y-COORDINATE OF SOURCE POINT
*	ICOLOR  :  IS THE COLOR TO SEARCH FOR
*	IDIRECT :  IS THE DIRECTION OF SEARCH (0=LEFT, -1=RIGHT)
*	NXCORD  :  IS THE X-COORDINATE FOUND (-1 IF NOT FOUND)
*	NYCORD  :  IS THE Y-COORDINATE FOUND (-1 IF NOT FOUND)
*
*  COPYRIGHT 1988 BY LGMA PRODUCTS
*
*  UPDATE HISTORY:
*
*    VERSION 4.1   02-OCT-88    MDOS VERSION
*
	DEF  CLRSRC		SET COLOR SEARCH
*
	COPY "FORTPAR:"
*
	UNL
	COPY "EQUATES:VID.EQ9"
	LIST
*
CLRSRC	EQU  $
	DATA -6			6 ARGUMENTS
	DATA TEMPS
	LI   R8,TEMPS+4		STUFF REGISTERS
	MOV  *R8+,R1
	MOV  *R1,R1		GET X COORDINATE
	MOV  *R8+,R2
	MOV  *R2,R2		GET Y COORDINATE
	MOV  *R8+,R3
	MOV  *R3,R3		GET COLOR TO SEARCH FOR
	ANDI R3,>FF
	MOV  *R8+,R4
	MOV  *R4,R4		GET DIRECTION TO SEARCH
	SLA  R4,8		IN HIGH BYTE
	SOC  R4,R3
	LI   R0,COLSRC		COLOR SEARCH
	XOP  @DVIDXP,0		DO IT
	JEQ  FNDCOL		FOUND COLOR
	SETO R0			NOT FOUND, SET X,Y = -1
	SETO R1
FNDCOL	EQU  $
	MOV  *R8+,R2		STUFF RESULTS
	MOV  R0,*R2
	MOV  *R8,R2
	MOV  R1,*R2
	MOV  @TEMPS,R3		RESTORE BASE
	B    *R11		RETURN
*
DVIDXP	DATA VIDXOP		VIDEO XOP NUMBER
*
TEMPS	BSS  4
	BSS  12			12 ARGUMENTS
	END
