	TITL 'CHAR - DEFINE GRAPHIC CHARACTER'
	IDT  'CHAR'
*
*
*  THIS SUBROUTINE DEFINES A CHARACTER BASED UPON THE 8 BYTE STRING PASSED.
*
*  CALLING SEQUENCE:
*
*	CALL CHAR ( ASCII CODE, PATTERN ARRAY )
*
*  WHERE:
*
*	ASCII   -  IS A ONE WORD INTEGER DESCRIBING THE ASCII CODE TO BE 
*       CODE       DEFINED
*
*	PATTERN -  IS AN 8 BYTE ARRAY OR DOUBLE PRECISION VALUE DESCRIBING
*	ARRAY	   THE CHARACTER TO DISPLAY
*
*  Copyright 1988 by LGMA Products
*
*  Update History:
*
*    29-Sep-88   Version 4.0     MDOS Compatible Version
*
*  DEFINITIONS:
*
	DEF  CHAR
*
*  EQUATES:
*
	COPY "FORTPAR:"
	UNL
	COPY "EQUATES:FORTEX.EQ9"
	IF   GENEVE
	COPY "EQUATES:VID.EQ9"
	ENDIF
	LIST
*
*  MAIN ENTRY:
*
CHAR	EQU  $
	DATA -2			2 ARGUMENTS
	DATA TEMPS		TEMP SAVE AREA
	MOV  @ACODE,R5		COMPUTE POINTER
	MOV  *R5,R5
	JLT  CHARER		BRIF <0, ERROR
	CI   R5,255
	JGT  CHARER		BRIF >255, ERROR
	IFEQ GENEVE
	SLA  R5,3		* 8 FOR 8 BYTE ARRAY
	AI   R5,PATPTR		+ TABLE START
	MOV  R5,R0
	MOV  @APATTE,R1		CPU RAM START
	LI   R2,8		8 BYTES TO MOVE
	BLWP @CVMBW$		WRITE IT
	ELSE
	MOV  @APATTE,R0		MOVE PATTERN TO HIGH RAM
	LI   R1,IOBBUF
	MOV  *R0+,*R1+		BYTES 0,1
	MOV  *R0+,*R1+		BYTES 2,3
	MOV  *R0+,*R1+		BYTES 4,5
	MOV  *R0,*R1
	LI   R0,CHAPAD		CHARACTER PATTERN DEFINE
	LI   R1,IOBBUF		ADDRESS OF PATTERN TO STORE
	LI   R2,1		1 PATTERN TO STORE
	MOV  R5,R3		STARTING CHARACTER NUMBER
	CLR  R4			DEFINE PATTERN (NOT GET)
	XOP  @DVIDXP,0		DO IT
	ENDIF
	JMP  CHARRE
CHARER	EQU  $
	BLWP *R10		REPORT ERROR
	DATA ERROR
	DATA 'IV'		Illegal value in char
CHARRE	EQU  $
	MOV  @TEMPS,R3
	B    *R11
*
*  DATA AREA:
*
TEMPS	BSS  4
ACODE	BSS  2			ASCII CHARACTER CODE
APATTE	BSS  2			PATTERN ARRAY
	IF   GENEVE
DVIDXP	DATA VIDXOP
	ENDIF
	END
