	TITL 'SET/GET CURSOR POSITION'
	IDT  'SETPOS'
*
*  SETPOS   :    SET CURSOR POSITION
*  GETPOS   :    GET CURSOR POSITION
*
*  CALLING SEQUENCE:
*
*       CALL SETPOS ( ROW, COLUMN )
*       CALL GETPOS ( ROW, COLUMN )
*
*  WHERE:
*
*       ROW     :  IS THE CURRENT ROW NUMBER
*       COLUMN  :  IS THE CURRENT COLUMN NUMBER
*
*  COPYRIGHT 1988 BY LGMA PRODUCTS
*
*  UPDATE HISTORY:
*
*    VERSION 4.1   02-OCT-88    MDOS VERSION
*                  13-NOV-88    MDOS 1.14 VERSION, ADDED ERROR CHECKING
*                  02-DEC-89    GPL VERSION
*
	DEF  SETPOS
	DEF  GETPOS
*
	COPY "FORTPAR:"
*
	UNL
	COPY "EQUATES:VID.EQ9"
	COPY "EQUATES:FORTEX.EQ9"
	LIST
*
SETPOS	EQU  $
	DATA -2			2 ARGUMENTS
	DATA TEMPS
	IF   GENEVE
	LI   R0,GETVID		GET VIDEO MODE (AND ROW/COLUMNS)
	XOP  @DVIDXP,0
	MOV  R1,R6		COLUMN NUMBER
	MOV  R2,R7		ROW NUMBER
	LI   R0,SETCUR
	MOV  @AROW,R1		GET THE ROW NUMBER
	JEQ  BADROW
	MOV  *R1,R1
	JLT  BADROW
	C    R1,R7
	JEQ  BADROW		ROW IS 0 TO N
	JGT  BADROW
	MOV  @ACOL,R2
	JEQ  BADCOL
	MOV  *R2,R2
	JLT  BADCOL
	C    R2,R6
	JEQ  BADCOL		COLUMN IS 0 TO N
	JGT  BADCOL
	XOP  @DVIDXP,0		DO IT
	JMP  SETRET
	ELSE
	MOV  @TABADD,R6		GET VRAM ADDRESS TABLE START
	MOV  *R6,R6		GET # OF CHARS PER LINE
	MOV  @AROW,R0		GET ROW NUMBER
	JEQ  BADROW
	MOV  *R0,R0
	JLT  BADROW
	JEQ  BADROW
	CI   R0,24		IS IT 1-24?
	JGT  BADROW
	DEC  R0
	MPY  R6,R0
	MOV  R1,R0		RESULTING VALUE
	MOV  @ACOL,R1		GET COLUMN NUMBER
	JEQ  BADCOL
	MOV  *R1,R1
	JLT  BADCOL
	JEQ  BADCOL
	C    R1,R5
	JGT  BADCOL
	A    R1,R0
	MOV  R0,@VDPXY		SAVE NEW COORDINATES
	JMP  SETRET
	ENDIF
*
BADROW	EQU  $			BAD ROW NUMBER
	MOV  R1,R5		DISPLAY IN cccc
	BLWP *R10
	DATA ERROR
	TEXT 'RO'
	JMP  SETRET
*
BADCOL	EQU  $			BAD COLUMN NUMBER
	MOV  R2,R5		DISPLAY IN cccc
	BLWP *R10
	DATA ERROR
	TEXT 'CO'
	JMP  SETRET
*
*  GETPOS - GET CURRENT ROW AND COLUMN NUMBER
*
GETPOS	EQU  $
	DATA -2			2 ARGUMENTS
	DATA TEMPS
	IF   GENEVE
	LI   R0,GETCUR
	XOP  @DVIDXP,0		GET THE ROW/COLUMN
	MOV  @AROW,R5		SAVE THEM
	MOV  R0,*R5		ROW
	MOV  @ACOL,R5
	MOV  R1,*R5
	ELSE
	MOV  @VDPXY,R1		GET CURRENT X-Y COORDINATES
	CLR  R0
	MOV  @TABADD,R5		GET # OF CHARS PER LINE
	MOV  *R5,R5
	DIV  R5,R0		CALCULATE IT
	INC  R0
	INC  R1
	MOV  @AROW,R5
	JEQ  BADROW
	MOV  R0,*R5
	MOV  @ACOL,R5		SAVE ROW AND COLUMN NUMBER
	JEQ  BADCOL
	MOV  R1,*R5
	ENDIF
*
SETRET	EQU  $
	MOV  @TEMPS,R3		RESTORE BASE
	B    *R11		RETURN
*
	IF   GENEVE
DVIDXP	DATA VIDXOP		VIDEO XOP NUMBER
	ENDIF
*
TEMPS	BSS  4
AROW	BSS  2			ROW
ACOL	BSS  2			COLUMN
	END
