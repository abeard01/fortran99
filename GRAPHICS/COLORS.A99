	TITL 'CHANGE SCREEN COLOR ROUTINE'
	IDT  'COLOR'
*
*
*  THIS ROUTINE IS CALLED TO CHANGE THE COLOR OF CHARACTER SETS.
*
*  CALLING SEQUENCE:
*
*      CALL COLOR ( CHAR SET, FOREGROUND COLOR, BACKGROUND COLOR )
*
*  WHERE:
*
*    CHAR SET   -  IS THE CHARACTER SET NUMBER TO CHANGE
*
*    FOREGROUND -  IS A ONE WORD INTEGER WHICH SPECIFIES THE FOREGROUND
*    COLOR	   COLOR
*
*    BACKGROUND -  IS A ONE WORD INTEGER WHICH SPECIFIES THE BACKGROUND
*    COLOR	   COLOR
*
*  THIS SUBROUTINE SETS THE APPROPRIATE VDP ENTRY IN THE COLOR TABLE.
*
*  UPDATE HISTORY:
*
*    ?????                 INITIAL VERSION
*    21-FEB-1989   V4.2    MDOS COMPATIBLE VERSION
*    06-AUG-1989   V4.4    GPL COMPATIBLE VERSION
*
*  DEFINITIONS:
*
	DEF  COLOR
*
	COPY "FORTPAR:"
	UNL
	COPY "EQUATES:FORTEX.EQ9"
	COPY "EQUATES:VID.EQ9"
	LIST
*
*  START ROUTINE:
*
COLOR	EQU  $
	DATA -3			3 ARGUMENTS
	DATA TEMPS		TEMP SAVE AREA
	IFEQ GENEVE
	MOV  @SET40F,R5		40 CHARACTER MODE?
	CI   R5,TEXT1		BRIF 40 CHARACTER MODE
	JEQ  BADCAL
	CI   R5,TEXT2		80 CHARACTER MODE?
	JEQ  BADCAL
	ELSE
	LI   R0,GETVID		GET VIDEO MODE
	XOP  @DVIDXP,0		DO IT
	CI   R0,GRAPH1		GRAPHIC 1 MODE?
	JNE  BADCAL		BRIF NO, BAD CALL
	LI   R0,GETVTB		GET VIDEO TABLE ADDRESSES
	LI   R1,TABLES		TABLE ADDRESSES
	XOP  @DVIDXP,0		GET THE ADDRESSES
	ENDIF
SET32	EQU  $
	MOV  @ACHARS,R5		GET CHARACTER SET #
	MOV  *R5,R0
	JLT  BADSET		BAD SET #
	JEQ  BADSET
	CI   R0,28
	JGT  BADSET
	DEC  R0
	IFEQ GENEVE
	AI   R0,COLPTR+4	ADD TABLE START ADDRESS
	ELSE
	A    @TABLES,R0		+ COLOR TABLE START ADDRESS
	AI   R0,4		+ 4
	ENDIF
	MOV  @ABACKG,R6
	MOV  *R6,R5
	JLT  BADBCO
	JEQ  BADBCO
	CI   R5,16
	JGT  BADBCO
	DEC  R5
	ANDI R5,>F		BACKGROUND COLOR
	SRC  R5,8
	MOV  @AFOREG,R6
	MOV  *R6,R1		ERROR CHECK ON FOREGROUND COLOR
	JLT  BADFCO
	JEQ  BADFCO
	CI   R1,16
	JGT  BADFCO
	DEC  R1
	ANDI R1,>F		FOREGROUND COLOR
	SRC  R1,4
	A    R5,R1		OR BOTH TOGETHER
	IFEQ GENEVE
	BLWP @CVSBW$		WRITE IT TO VDP RAM COLOR TABLE
	ELSE
	LIMI 0			DISABLE INTERRUPTS
	MOVB @TABLES+3,@VDPOR1
	ORI  R0,>4000		TAKE SOME TIME (SET WRITE BIT IN R0)
	MOVB @TABLES+2,@VDPOR1
	SWPB R0
	MOVB R0,@VDPOR1
	SWPB R0
	MOVB R0,@VDPOR1
	SWPB R0			TAKE SOME TIME
	MOVB R1,@VDPOR0		SET BYTE
	LIMI 2			RESTORE INTERRUPTS
	ENDIF
	JMP  COLRET
BADFCO	EQU  $			BAD FOREGROUND COLOR
	MOV  R1,R5		FOR DISPLAY
BADBCO	EQU  $
	BLWP *R10
	DATA ERROR
	DATA 'CL'		BAD COLOR SPECIFIED
	JMP  COLRET
BADCAL	EQU  $
	BLWP *R10
	DATA ERROR
	TEXT 'S4'		40 COLUMN MODE - CANNOT DO
	JMP  COLRET
BADSET	EQU  $
	BLWP *R10
	DATA ERROR
	TEXT 'CS'		BAD CHARACTER SET # (1-28)
COLRET	EQU  $
	MOV  @TEMPS,R3		RESTORE R3
	B    *R11		RETURN
*
*  DATA AREA:
*
TEMPS	BSS  4
ACHARS	BSS  2			CHARACTER SET #
AFOREG	BSS  2			FOREGROUND SET #
ABACKG	BSS  2			BACKGROUND SET #
*
	IF   GENEVE
DVIDXP	DATA VIDXOP		VIDEO XOP NUMBER
TABLES	DATA 0,0		COLOR TABLE
	DATA 0,0		PATTERN TABLE
	DATA 0,0		SCREEN IMAGE TABLE
	DATA 0,0		SPRITE ATTRIBUTE TABLE
	DATA 0,0		SPRITE PATTERN TABLE
	DATA 0,0		SPRITE COLOR TABLE
	ENDIF
	END
