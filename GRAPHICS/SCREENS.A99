	TITL 'CHANGE SCREEN COLOR ROUTINE'
	IDT  'SCREEN'
*
*  THIS ROUTINE IS CALLED TO CHANGE THE COLOR OF THE SCREEN.
*
*  CALLING SEQUENCE:
*
*      CALL SCREEN ( BACKGROUND COLOR CODE [,FOREGROUND COLOR CODE] )
*      CALL SETTEX ( BACKGROUND COLOR CODE, FOREGROUND COLOR CODE )
*
*  CALL SCREEN CHANGES THE COLOR OF THE SCREEN TO THE COLORS SPECIFIED.
*  CALL SETTXT CHANGES THE TEXT COLOR TO THE COLORS SPECIFIED (MDOS ONLY)
*
*  WHERE:
*
*    COLOR CODE -  IS A ONE WORD INTEGER WHICH IS THE COLOR CODE #
*
*  THIS SUBROUTINE SETS THE VDP REGISTER 7 TO THE SPECIFIED COLOR
*  CODE(S), OR CALLS THE APPROPRIATE MDOS CALL.
*
*  NOTE FOR MDOS VERSION, BOTH ARGUMENTS MUST BE SPECIFIED.
*
*  Change History:
*
*  v3.0    03-July-1987:   Added second parameter.  Needed for 40 column
*		 	   mode.
*
*  V4.0    09-SEP-1988:    Updated for MDOS compatible version.
*
*  V4.1    30-OCT-1988:    Fixed foreground/background colors for Geneve
*			   version, decremented value by 1.   Also note
*			   funny MDOS bug, screen change will not take
*			   unless foreground color changes as well as
*			   background color.
*
*  V4.2    12-FEB-1989     Change to version 1.14 of MDOS, and new call
*			   screen function code >0a.
*
*  V4.2a   29-Feb-1989     Fix of screen color.
*
*  v4.4    20-Jan-1990     Add mode 4 for GPL mode
*
*  v4.41   19-Mar-1990     Fix MDOS mode, broken in mdos .96h
*
*  Copyright 1989 by LGMA Products
*
*  DEFINITIONS:
*
	DEF  SCREEN		SET SCREEN COLOR
*
	COPY "FORTPAR:"
	UNL
	COPY "EQUATES:FORTEX.EQ9"
	COPY "EQUATES:VID.EQ9"
	LIST
*
	IF    GENEVE
	DEF   SETTEX		SET TEXT COLOR MODE
	ENDIF
*
*      START ROUTINE:
*
SCREEN	EQU  $
	DATA -2			2 POSSIBLE ARGUMENTS
	DATA TEMPS		TEMP SAVE AREA
	UNL
	IF   GENEVE
	LIST
	LI   R0,GETVTB		GET VIDEO TABLES
	LI   R1,IOBBUF
	XOP  @DVIDXP,0		GET THEM
*
	LI   R0,GETVID		GET VIDEO MODE
	XOP  @DVIDXP,0
*
	MOV  R0,R6		SAVE VIDEO MODE
	CI   R0,GRAPH7		IS THIS GRAPHICS 7 MODE?
	JEQ  GENGR7		BRIF YES
*
	MOV  R7,R2		GET DEFAULT FOREGROUND COLOR
	SLA  R2,4		IN LEFT BYTE
	MOV  @ACOLO2,R5		ELSE, WAS FOREGROUND COLOR SPECIFIED?
	JEQ  NOCOL2
	MOV  *R5,R2		ELSE, GET THE COLOR
	DEC  R2
	SLA  R2,4		LEFT SHIFT IT
*
NOCOL2	EQU  $
	ANDI R2,>00F0		MASK THE COLOR BYTE
	MOV  @ACOLO1,R5		GET THE BACKGROUND COLOR
	MOV  *R5,R5
	DEC  R5
	ANDI R5,>F
	SOC  R5,R2		OR IT IN
	LI   R1,7
	LI   R0,VVWTR		WRITE IT TO REGISTER #7
	XOP  @DVIDXP,0
*
	ANDI R2,>000F		MASK BACKGROUND COLOR
	MOV  R2,R1
	LI   R0,SETBOR		SET BORDER COLOR
	XOP  @DVIDXP,0
	JMP  SCRRET
*
GENGR7	EQU  $
	MOV  @ACOLO1,R2		BACKGROUND COLOR IS FULL BYTE
	MOV  *R2,R2
	ANDI R2,>FF
	LI   R1,7		SET VIDEO REGISTER #7
	LI   R0,VVWTR
	XOP  @DVIDXP,0		SET IT
*
	MOV  R2,R1		SET BORDER COLOR
	LI   R0,SETBOR
	XOP  @DVIDXP,0
	JMP  SCRRET
*
SETTEX	EQU  $			SET TEXT MODE
	DATA -2			2 ARGUMENT
	DATA TEMPS
*
	MOV  @ACOLO1,R1		GET BACKGROUND COLOR
	MOV  *R1,R1
	ANDI R1,>FF
*
	MOV  @ACOLO2,R2		GET FOREGROUND COLOR
	MOV  *R2,R2
	SLA  R2,8
	SOC  R2,R1		OR WITH BACKGROUND COLOR
	LI   R0,SETTCO		SET TEXT COLOR
	XOP  @DVIDXP,0		DO IT
	JMP  SCRRET
	UNL
	ELSE
	LIST
	MOV  @ACOLO1,R5		GET COLOR NUMBER
	JEQ  BADCOL
	MOV  *R5,R5
	JLT  BADCOL		BAD COLOR
	CI   R5,16
	JGT  BADCOL
	DEC  R5
	MOV  @ACOLO2,R1		IS 2ND PARAMETER SPECIFIED?
	JEQ  NOTHER		BRIF NO
	MOV  *R1,R1		GET VALUE
	JLT  BADCOL
	CI   R1,16
	JGT  BADCOL
	DEC  R1
	JMP  IMHERE
NOTHER  EQU  $
	MOV  R5,R1		USE SAME COLOR	
IMHERE  EQU  $
	SRC  R1,12
	SOC  R1,R5
	AI   R5,>0700		ADD DEFAULT TEXT MODE
	MOV  R5,R0
	BLWP @CVWTR$
	MOV  @SET40F,R5		IS THIS BITMAP MODE?
	CI   R5,GRAPH2
	JNE  SCRRET
	MOV  R0,R1
	SWPB R1
	MOV  @TABADD,R6
	MOV  @4(R6),R0		START OF COLOR TABLE
	LI   R2,>1800		MOVE 1800 BYTES
LOOPIT	EQU  $
	BLWP @CVSBW$
	INC  R0
	DEC  R2
	JNE  LOOPIT
	JMP  SCRRET
	ENDIF
	LIST
BADCOL	EQU  $
	BLWP *R10
	DATA ERROR
	TEXT 'CL'
SCRRET EQU  $
	MOV  @TEMPS,R3
	B    *R11		RETURN
*
*  DATA AREA:
*
TEMPS	BSS  4
ACOLO1	BSS  2			BACKGROUND COLOR (1-16)
ACOLO2	BSS  2			OPTIONAL FOREGROUND COLOR (1-16)
*
	IF   GENEVE
DVIDXP	DATA VIDXOP		VIDEO XOP NUMBER
	ENDIF
	END
