	TITL  'GVIDTB - GET VIDEO TABLE ADDRESSES'
	IDT   'GVIDTB'
*
*  GVIDTB : GET VIDEO TABLE STARTING ADDRESSES
*
*  RETURNS THE STARTING VDP ADDRESSES OF THE FOLLOWING TABLES:
*
*		COLOR TABLE
*		PATTERN TABLE
*		SCREEN IMAGE TABLE
*		SPRITE ATTRIBUTE TABLE
*		SPRITE PATTERN TABLE
*		SPRITE COLOR TABLE
*
*  IN THE SPECIFIED INTEGER *4 ARRAY.
*
*  CALLING SEQUENCE:
*
*	CALL GVIDTB ( ARRAY )
*
*  WHERE:
*
*	ARRAY : IS A TWELVE WORD ARRAY WHICH CONTAINS THE STARTING
*		ADDRESSES OF THE SIX INTEGER *4 TABLES
*
*  UPDATE HISTORY:
*
*     03-DEC-88   V4.3      INITIAL WRITING
*     03-DEC-89   V4.4      UPDATE FOR GPL MODE
*
	DEF   GVIDTB
*
	COPY  "FORTPAR:"
*
	UNL
	IF    GENEVE
	COPY  "EQUATES:VID.EQ9"
	ENDIF
	COPY  "EQUATES:FORTEX.EQ9"
	LIST
*
GVIDTB	EQU   $
	DATA -1			1 ARGUMENT 
	DATA TEMPS
*
	UNL
	IF   GENEVE
	LIST
	LI   R1,IOBBUF		PUT IN I/O BUFFER FOR NOW
	LI   R0,GETVTB		GET VIDEO TABLES
	XOP  @DVIDXP,0		DO IT
*
	LI   R0,IOBBUF		MOVE TWELVE WORDS TO USER BUFFER
	MOV  @AARG1,R1
	LI   R4,6		SIX DOUBLE WORDS TO MOVE
GVIDMV	EQU  $
	MOV  *R0+,R2		GET 2ND PART OF ADDRESS
	MOV  *R0+,R3		GET 1ST PART OF ADDRESS
	ANDI R3,>7		MASK BANK NUMBER
	MOV  R3,*R1+		SAVE IT
	MOV  R2,*R1+		SAVE LOW ADDRESS
	DEC  R4
	JNE  GVIDMV		AGAIN
	ELSE
	LIST
	MOV  @TABADD,R5		GET VIDEO TABLE LOCATION START
	AI   R5,4		SKIP PAST LINE LENGTH & END
	MOV  @AARG1,R6		GET USER LOCATION START
	LI   R7,6		MOVE 6 WORDS
*
GVIDT1	EQU  $
	CLR  *R6+		CLEAR FIRST WORD
	MOV  *R5+,*R6+
	DEC  R6
	JNE  GVIDT1
	ENDIF
*
	MOV  @TEMPS,R3
	B    *R11		RETURN
*
TEMPS	BSS  4
AARG1	BSS  2
	UNL
	IF   GENEVE
	LIST
DVIDXP	DATA VIDXOP
	ENDIF
	LIST
	END
