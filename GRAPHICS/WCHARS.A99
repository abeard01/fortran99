	TITL 'HCHAR/VCHAR - HORIZONTAL/VERTICAL WRITES'
	IDT  'WCHAR'
*
*  THIS SUBROUTINE WRITES SINGLE OR MULTIPLE ASCII CHARACTERS TO
*    THE SCREEN.
*
*  CALLING SEQUENCE:
*
*	CALL HCHAR ( ROW, COL, ASCII CODE [,REPETITION])
*	CALL VCHAR ( ROW, COL, ASCII CODE [,REPETITION])
*
*  WHERE:
*
*	ROW   - IS A ONE WORD INTEGER FROM 1 TO 24
*		WHICH DESCRIBES THE ROW NUMBER TO START
*
*	COL   - IS A ONE WORD INTEGER FROM 1 TO 32 (OR 1 TO 40)
*		(OR 1 TO 80) WHICH DESCRIBES THE COLUMN NUMBER TO START
*
*	ASCII - IS A ONE WORD INTEGER WHICH IS THE ASCII CHARACTER TO WRITE
*	CHARACTER
*
*	REPE- - IS A ONE WORD OPTIONAL INTEGER WHICH IS
*	TITION   THE NUMBER OF REPETITIONS TO WRITE THE CHAR
*
*  THIS SUBROUTINE WILL WRITE THE REQUESTED CHARACTERS TO THE SCREEN.
*
*  Change History:
*
*   v3.0  20-June-87  Changed interrupt vector address INTFLG.
*
*   v4.0  09-Sept-88  MDOS Compatible Version
*
*   V4.4  09-SEP-89   GPL COMPATIBLE VERSION, 80 COLUMN MODE
*  DEFINITIONS:
*
	DEF  HCHAR
	DEF  VCHAR
*
	COPY "FORTPAR:"
*
	UNL
	COPY "EQUATES:VID.EQ9"
	COPY "EQUATES:FORTEX.EQ9"
	LIST
*
*  VCHAR - WRITE CHARACTERS VERTICAL
*
VCHAR	EQU  $
	DATA -4			4 ARGUMENTS
	DATA TEMPS
	IFEQ GENEVE
	SETO @VWRITE		SET VERTICAL WRITE FLAG
	ELSE
	LI   R9,VCHARW		SET MDOS VERTICAL WRITE FLAG
	ENDIF
	JMP  HCHAR1
*
*  HCHAR - WRITE CHARACTERS HORIZONTAL
*
HCHAR	EQU  $
	DATA -4			4 ARGUMENTS
	DATA TEMPS		TEMP DATA AREA
	IFEQ GENEVE
	CLR  @VWRITE		RESET VERTICAL WRITE FLAG
HCHAR1	EQU  $
	MOV  @SET40F,R5		GET 32/40 COLUMN MODE
	CI   R5,GRAPH1
	JEQ  SET32C
	CI   R5,TEXT1
	JEQ  SET40C
	LI   R6,80
	JMP  SETCON
SET40C	EQU  $
	LI   R6,40
	JMP  SETCON
SET32C	EQU  $
	LI   R6,32
SETCON	EQU  $
	MOV  @AROW,R0		GET ROW
	MOV  *R0,R0
	JLT  BADROW		BRIF BAD ROW #
	JEQ  BADROW
	CI   R0,24
	JGT  BADROW
	DEC  R0			ZERO OFFSET
	MPY  R6,R0		*32 OR *40
	MOV  R1,R0
	MOV  @ACOL,R1		+ COLUMN
	MOV  *R1,R1
	JLT  BADCOL		BRIF BAD COLUMN #
	JEQ  BADCOL
	C    R1,R6
	JGT  BADCOL		BRIF > MAX COL
	A    R1,R0
	DEC  R0			- 1 FOR FORTRAN OFFSET
	LI   R4,24		DETERMINE ENDING SCREEN ADDRESS (24 * COL)
	MPY  R6,R4
	MOV  @ACHAR,R1		GET CHARACTER TO DISPLAY
	MOV  *R1,R1
	SWPB R1
	MOV  @AREPET,R2		GET # OF REPETITIONS
	JEQ  NOREPT
	MOV  *R2,R2
	JLT  BADREP		IF REPS <0, THEN BAD
	JMP  NOREP1
NOREPT	EQU  $
	LI   R2,1		MAKE SURE AT LEAST 1 REP
NOREP1	EQU  $
	STST R7			SAVE WHETHER INTERRUPTS WERE ON OR NOT
	LIMI 0			INHIBIT INTERRUPTS DURING WRITE
	ABS  @VWRITE		WRITE VERTICALLY?
	JEQ  HWRITL		BRIF NO, WRITE HORIZONTAL
VWRITL	EQU  $			WRITE VERTICAL LOOP
	ORI  R0,>4000		SET WRITE ENABLE BIT
	SWPB R0
	MOVB R0,@VDPWA
	SWPB R0
	MOVB R0,@VDPWA
	ANDI R0,>3FFF
	C    R0,R5		OFF SCREEN?
	JEQ  BADREP
	JGT  BADREP
	MOVB R1,@VDPWD		WRITE THE BYTE
	A    R6,R0		ADD COLUMN SIZE
	DEC  R2			DECR COUNTER
	JNE  VWRITL		IF MORE, WRITE IT
	JMP  CHARRE		ELSE, EXIT
*
*  HORIZONTAL WRITE.  TAKES ADVANTAGE OF VDP MEMORY AUTO-INCREMENT
*  TO NOT RESET VDP ADDRESS EACH TIME.  INTERRUPTS ARE DISABLED IN
*  LOOP.
*
HWRITL	EQU  $
	ORI  R0,>4000		SET WRITE ENABLE BIT
	SWPB R0
	MOVB R0,@VDPWA
	SWPB R0
	MOVB R0,@VDPWA
	ANDI R0,>3FFF
WRITLO	EQU  $
	C    R0,R5		OFF SCREEN?
	JEQ  BADREP
	MOVB R1,@VDPWD		WRITE THE BYTE
	INC  R0
	DEC  R2			DECR COUNTER
	JNE  WRITLO		IF MORE, WRITE IT
	JMP  CHARRE		ELSE, RETURN
*
*  FOLLOWING IS GENEVE SPECIFIC CODE.  NOTE THAT THE MDOS CALLS ARE NOT
*  USED IF THE SCREEN IS CURRENTLY IN GRAPHIC MODE 1, SINCE THIS IS 
*  DEFINED FOR FORTRAN AS THE TI-99 COMPATIBILITY MODE.
*
	ELSE
	LI   R9,HCHARW		HORIZONTAL CHARACTER WRITE
HCHAR1	EQU  $
	LI   R0,GETVID		GET CURRENT VIDEO MODE
	XOP  @DVIDXP,0
	MOV  R0,R8		SAVE CURRENT VIDEO MODE
*
	MOV  @AROW,R1		GET ROW NUMBER
	MOV  *R1,R1
	JLT  BADROW
	JEQ  BADROW
	CI   R1,24
	JGT  BADROW
	MOV  @ACOL,R2		GET COLUMN NUMBER
	MOV  *R2,R2
	JLT  BADCOL
	JEQ  BADCOL
	CI   R2,80
	JGT  BADCOL
	MOV  @ACHAR,R3		GET CHARACTER
	MOV  *R3,R3
	ANDI R3,>FF
*
*  following code is cause I'm not sure if MDOS wants it in high or low byte
*
	MOV  R3,R4		DUP IN HIGH AND LOW BYTES
	SLA  R4,8
	SOC  R4,R3
	MOV  @AREPET,R4		GET # OF REPITITIONS
	JEQ  HCHAR2		BRIF NOTHING HERE
	MOV  *R4,R4
	JLT  BADREP
	CI   R4,1920		CAN'T BE MORE THAN SCREEN POSITIONS
	JGT  BADREP
	JMP  HCHAR3
HCHAR2	EQU  $
	LI   R4,1		FORCE 1 REP IF NONE SPECIFIED
HCHAR3	EQU  $
	DEC  R1			DECREMENT ROW
	DEC  R2			DECREMENT COLUMN
	MOV  R9,R0		RESTORE OPCODE
	CI   R8,GRAPH1		IS THIS GRAPHICS MODE 1?
	JNE  HCHAR4		BRIF NO
	SLA  R1,5		ELSE, COMPUTE VDP ADDRESS FOR SCREEN START
	A    R2,R1		STARTING POSITION
	MOV  R1,R8		SAVE IT
	LI   R0,GETVTB		GET VIDEO TABLES
	LI   R1,TABLES
	XOP  @DVIDXP,0		GET THEM
	CI   R9,HCHARW		IS THIS HORIZONTAL WRITE?
	JNE  VCHAWR		BRIF NO, DO VERTICAL
*
	BL   @VSETUP		SETUP FOR VIDEO ACCESS
WRITHO	EQU  $
	CI   R8,32*24		OFF END OF SCREEN?
	JEQ  CHARRE
	JGT  CHARRE
	INC  R8
	MOVB R3,@VDPOR0		WRITE CHARACTER
	DEC  R4
	JNE  WRITHO
	JMP  CHARRE
*
VCHAWR	EQU  $
	BL   @VSETUP		SETUP FOR VIDEO ACCESS
	CI   R8,32*24		OFF END OF SCREEN?
	JEQ  CHARRE
	JGT  CHARRE
	AI   R8,32
	MOVB R3,@VDPOR0		WRITE CHARACTER
	DEC  R4
	JNE  VCHAWR
	JMP  CHARRE
*
HCHAR4	EQU  $
	XOP  @DVIDXP,0		DO IT
	JMP  CHARRE		DONE, GO EXIT
	ENDIF
*
*  ERRORS, BADROW, BADCOL AND BADREP
*
BADROW	EQU  $
	IFEQ GENEVE
	MOV  R0,R5		FOR DISPLAY
	ELSE
	MOV  R1,R5		FOR DISPLAY
	ENDIF
	BLWP *R10
	DATA ERROR
	TEXT 'RO'
	JMP  CHARRE
*
BADCOL	EQU  $
	IFEQ GENEVE
	MOV  R1,R5		FOR DISPLAY
	ELSE
	MOV  R2,R5
	ENDIF
	BLWP *R10
	DATA ERROR
	TEXT 'CO'
	JMP  CHARRE
*
BADREP	EQU  $
	MOV  @AREPET,R5
	JEQ  BADRE1
	MOV  *R5,R5
BADRE1	EQU  $
	BLWP *R10		BAD REPITITIONS
	DATA ERROR
	DATA 'RP'
CHARRE	EQU  $
	IFEQ GENEVE
	ANDI R7,>3		WERE INTERRUPTS ENABLED?
	JEQ  CHARR1		BRIF NO, LEAVE DISABLED
	LIMI 2			YES, RENABLE THEM
CHARR1	EQU  $
	ELSE
	LIMI 2			ALWAYS ENABLE THEM IN MDOS
	ENDIF
	MOV  @TEMPS,R3		RESTORE R3
	MOV  @TEMPS+2,R11	RESTORE R11
	B    *R11		WHEN DONE, RETURN
	IF   GENEVE
*
*  VSETUP - SETUP FOR VIDEO ACCESS
*
VSETUP	EQU  $
	LIMI 0			DISABLE INTERRUPTS
	MOVB @TABLES+11,@VDPOR1
	MOV  R8,R7		SCREEN ADDRESS
	MOVB @TABLES+10,@VDPOR1
	A    @TABLES+8,R7	 + SCREEN IMAGE START
	ORI  R7,>4000
	SWPB R7
	MOVB R7,@VDPOR1
	SWPB R7
	MOVB R7,@VDPOR1
	B    *R11
	ENDIF
*
*  DATA AREA
*
TEMPS	BSS  4			SAVE AREA
AROW	BSS  2			ROW
ACOL	BSS  2			COLUMN
ACHAR	BSS  2			CHARACTER
AREPET	BSS  2			# REPETITIONS
	IFEQ GENEVE
VWRITE	BSS  2			VERTICAL WRITE FLAG
	ELSE
DVIDXP	DATA VIDXOP		VIDEO XOP
TABLES	DATA 0,0		COLOR TABLE
	DATA 0,0		PATTERN TABLE
	DATA 0,0		SCREEN IMAGE TABLE
	DATA 0,0		SPRITE ATTRIBUTE TABLE
	DATA 0,0		SPRITE PATTERN TABLE
	DATA 0,0		SPRITE COLOR TABLE
	ENDIF
	END
