	TITL 'SET COLOR PALETTE'
	IDT  'SETPAL'
*
*  SETPAL   :    SET COLOR PALETTE
*
*  CALLING SEQUENCE:
*
*	CALL SETPAL ( IREG, IRED, IBLUE, IGREEN )
*
*  WHERE:
*
*       IREG    :  IS THE PALETTE REGISTER NUMBER (0-15)
*       IRED    :  IS THE INTENSITY OF THE RED COLOR (0-7)
*       IBLUE   :  IS THE INTENSITY OF THE BLUE COLOR (0-7)
*       IGREEN  :  IS THE INTENSITY OF THE GREEN COLOR (0-7)
*
*  COPYRIGHT 1988 BY LGMA PRODUCTS
*
*  UPDATE HISTORY:
*
*    VERSION 4.1   02-OCT-88    MDOS VERSION
*                  14-NOV-88    REWORKED FOR 3 COLORS.
*                              
*
	DEF  SETPAL		SET BORDER COLOR
*
	COPY "FORTPAR:"
	UNL
	COPY "EQUATES:VID.EQ9"
	COPY "EQUATES:FORTEX.EQ9"
	LIST
*
SETPAL	EQU  $
	DATA -4			4 ARGUMENTS
	DATA TEMPS
	MOV  @AREG,R1		GET REGISTER NUMBER
	JEQ  BADREG
	MOV  *R1,R1
	JLT  BADREG
	CI   R1,15
	JGT  BADREG
	MOV  @ARED,R5		GET RED COLOR
	JEQ  BADCOL
	MOV  *R5,R5
	JLT  BADCOL
	CI   R5,7
	JGT  BADCOL
	SLA  R5,12		PUT IN HIGH NIBBLE
	MOV  R5,R2
	MOV  @ABLUE,R5		GET BLUE COLOR
	JEQ  BADCOL
	MOV  *R5,R5
	JLT  BADCOL
	CI   R5,7
	JGT  BADCOL
	SLA  R5,8
	SOC  R5,R2
	MOV  @AGREEN,R5		GET GREEN COLOR
	JEQ  BADCOL
	MOV  *R5,R5
	JLT  BADCOL
	CI   R5,7
	JGT  BADCOL
	SOC  R5,R2		NOW HAVE RED, GREEN, BLUE COLOR
	LIMI 0
	SWPB R1			GET PALLETTE NUMBER
	MOVB R1,@VDPOR1		SEND IT
	LI   R1,>80+16*256	VIA PORT 16
	MOVB R1,@VDPOR1
	SWPB R1			DELAY A BIT
	MOVB R2,@VDPOR2		SEND VIA VIDEO PORT 2
	SWPB R2
	MOVB R2,@VDPOR2
	LIMI 2
*	LI   R0,SETCOP		SET PALETTE
*	XOP  @DVIDXP,0		DO IT
	JMP  VIDDON
*
BADREG	EQU  $
	MOV  R1,R5		DISPLAY BAD REGISTER
	BLWP *R10
	DATA ERROR
	DATA 'PA'		BAD PALLETTE REGISTER
	JMP  VIDDON
*
BADCOL	EQU  $
	BLWP *R10		BAD COLOR
	DATA ERROR
	DATA 'RG'
*
VIDDON	EQU  $
	MOV  @TEMPS,R3		RESTORE BASE
	B    *R11		RETURN
*
DVIDXP	DATA VIDXOP		VIDEO XOP NUMBER
*
TEMPS	BSS  4
AREG	BSS  2			REGISTER NUMBER (0-15)
ARED	BSS  2			RED COLOR (0-7)
ABLUE	BSS  2			BLUE COLOR (0-7)
AGREEN	BSS  2			GREEN COLOR (0-7)
ACOLOR	BSS  2			COLOR CODE FOR BORDER
	END
