	TITL 'CHARPA - READ GRAPHIC CHARACTER'
	IDT  'CHARPA'
*
*  THIS SUBROUTINE RETURNS THE 8 BYTE CHARACTER IDENTIFIER FOR THE
*  CHARACTER SPECIFIED.
*
*  CALLING SEQUENCE:
*
*  	CALL CHARPA ( ASCII CODE, PATTERN ARRAY )
*
*  WHERE:
*
*  	ASCII   -  IS A ONE WORD INTEGER DESCRIBING CODE THE ASCII CODE
*	CODE       TO BE DEFINED
*
*  	PATTERN -  IS AN 8 BYTE ARRAY OR DOUBLE PRECISION VALUE WHICH
*	ARRAY      WILL CONTAIN THE CHARACTER IDENTIFIER.
*
*  Update History:
*
*    ????      Version2/3     Initial Version
*    20-Feb-89 Version 4      MDOS Compatible Version
*    06-Aug-89 Version 4.4    GPL Compatible Version
*
*  Copyright 1989 by LGMA Products
*
*  DEFINITIONS:
*
	DEF  CHARPA
*
*  EQUATES:
*
	COPY "FORTPAR:"
	UNL
	COPY "EQUATES:FORTEX.EQ9"
	IF   GENEVE
	COPY "EQUATES:VID.EQ9"
	ENDIF
	LIST
*
*  MAIN ENTRY:
*
CHARPA	EQU  $
	DATA -2			2 ARGUMENTS
	DATA TEMPS		TEMP SAVE AREA
	MOV  @ACODE,R5		COMPUTE POINTER
	MOV  *R5,R5
	JLT  CHARER		BAD VALUE PASSED
	CI   R5,255
	JGT  CHARER
	IFEQ GENEVE
	SLA  R5,3	  	* 8 FOR 8 BYTE ARRAY
	AI   R5,PATPTR    	+ TABLE START
	MOV  R5,R0
	MOV  @APATTE,R1   	CPU RAM START
	LI   R2,8	  	8 BYTES TO MOVE
	BLWP @CVMBR$	 	READ IT
	JMP  CHARRE
	ELSE
	LI   R0,CHAPAD		GET CHARACTER PATTERN
	LI   R1,IOBBUF		PUT IN I/O BUFFER FOR NOW
	LI   R2,1		1 PATTERN
	MOV  R5,R3		PATTERN NUMBER TO GET
	SETO R4			GET THE PATTERN
	XOP  @DVIDXP,0		DO IT
	LI   R0,IOBBUF		MOVE FROM
	MOV  @APATTE,R1		MOVE TO ADDRESS
	LI   R2,-8		8 BYTES TO MOVE
MOVLOP	EQU  $
	MOVB *R0+,*R1+
	INC  R2			MOVE THE ARGUMENT
	JNE  MOVLOP
	JMP  CHARRE
	ENDIF
CHARER	EQU  $
	BLWP *R10	  	DISPLAY ERROR
	DATA ERROR
	DATA 'IV'	  	ILLEGAL VALUE
CHARRE	EQU  $
	MOV  @TEMPS,R3    	RESTORE R3
	B    *R11	  	RETURN
*
*  DATA AREA:
*
TEMPS	BSS  4
ACODE	BSS  2	     		ASCII CHARACTER CODE
APATTE	BSS  2	     		PATTERN ARRAY
*
	IF   GENEVE
DVIDXP	DATA VIDXOP		VIDEO XOP
	ENDIF
	END
