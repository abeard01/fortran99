       TITL 'FORTRAN COMPILER PART 2'
       IDT  'FORT2'
       DEF  FORT2
FORT2  EQU  $
*
*  This section of the compiler contains the intermediate FORTRAN
*  Psuedo Opcodes.  It is interpreted by the FORTRAN1 module.
*
*  FORTRAN2 is mapped by the MENU loader routine into VDP RAM.
*  None of this code is actually executed as CPU instructions.
*
*  Assembled into cpu ram location:    >C000
*  Interpreted in vdp ram location:    >1480
*
*  Update history:
*
*    Version 2.3,  12-April-1987
*
*      Patch update, and changed some code definitions
*
       TITL 'FORTRAN2A - INTERPRETER DATA PAGE'
*
*  This module contains the equates, references, and definitions
*  for the FORTRAN compiler intermediate interpreter.
*
       AORG 0
*
*   STACK DEFINITIONS:
*
REXPON EQU  0            Exponential Routine Names
RINTRI EQU  REXPON+1     Intrinsic Function Names
RLCCON EQU  RINTRI+1     Integer Constants
ROPTIO EQU  RLCCON+1     Compilation Options
*
RINPUT EQU  ROPTIO+1     Input Buffer
RBUFFE EQU  RINPUT+1     Intermediate Code Buffer
RCODE  EQU  RBUFFE+1     Statement Code
RPROLO EQU  RCODE+1      Subprogram Setup Code
RTEMP  EQU  RPROLO+1     Temp Stack
REXIT  EQU  RTEMP+1      Exit Stack
RWORK  EQU  REXIT+1      Work Stack
RPOLIS EQU  RWORK+1      Polish stack (expressions)
RPTRS  EQU  RPOLIS+1     Expression Result Pointers
RDOLOO EQU  RPTRS+1      Closing code for open DO loops
*
RREFLB EQU  RDOLOO+1     Labels referenced in current statements
RDELTA EQU  RREFLB+1     Incremented address
RMODAD EQU  RDELTA+1     Modified address literal
REXEC  EQU  RMODAD+1     Execute target labels (unused)
RLABEL EQU  REXEC+1      Program labels
RMLABE EQU  RLABEL+1     Made labels
RFXCON EQU  RMLABE+1     Integer Constants
RSPCON EQU  RFXCON+1     Single Precision Constants
RDPCON EQU  RSPCON+1     Double Precision Constants
RHOLVA EQU  RDPCON+1     Hollerith Variable (format) words
RSDB   EQU  RHOLVA+1     
RCTEMP EQU  RSDB+1       Numeric Temps
RATEMP EQU  RCTEMP+1     Address Temps
RLDUMM EQU  RATEMP+1     Local Dummies  (Statement function args)
RGDUMM EQU  RLDUMM+1     Global Dummies (Subprogram arguments)
*
RSCALE EQU  RGDUMM+1     Scalar Variables
RGSPRO EQU  RSCALE+1     Referenced Global Subprograms
RARRAY EQU  RGSPRO+1     Array Variables
RPROGR EQU  RARRAY+1     Programs Referenced
RLSPRO EQU  RPROGR+1     LOCAL SPROGS (STMT FUNCTIONS)
RACCUM EQU  RLSPRO+1     ACCUMULATOR
RASTAT EQU  RACCUM+1     ARRAY STATISTICS
RALLOC EQU  RASTAT+1     ALLOCATION GROUPS
RCOMMO EQU  RALLOC+1     NAMES DECLARED IN BLANK COMMON
RCMNAM EQU  RCOMMO+1     NAMES DECLARED IN COMAREAS
RCMARE EQU  RCMNAM+1
RPOINT EQU  RCMARE+1     NAMES DECLARED IN POINTER VARIABLES
RINTEG EQU  RPOINT+1     NAMES DECLARED INTEGER
RSREAL EQU  RINTEG+1     NAMES DECLARED SINGLE-PREC REAL
RDREAL EQU  RSREAL+1     NAMES DECLARED DOUBLE-PREC REAL
RLOGIC EQU  RDREAL+1     NAMES DECLARED LOGICAL
REQUIV EQU  RLOGIC+1     NAMES DECLARED EQUIVALENCE
REXTER EQU  REQUIV+1     NAMES DECLARED EXTERNAL
RIMPLI EQU  REXTER+1     LETTERS DECLARED FOR IMPLICIT TYPE
RIF    EQU  RIMPLI+1
*
ROLLS  EQU  RIF+1
*
RX3    EQU  RALLOC       HOLLRITH VARIABLE ROLL
RERRSY EQU  RPROLO       ALLOCATION ERROR ROLL
*
RUNG0  EQU  0
RUNG1  EQU  1
RUNG2  EQU  2
RUNG3  EQU  3
RUNG4  EQU  4
RUNG5  EQU  5
*
*      EQUATED DEFINITIONS:
*
BASE   EQU  >0
AHEXSC EQU  BASE+3*ROLLS+1 SCAN HEX CONSTANT SUBROUTINE
AEXFAL EQU  AHEXSC+1     EXIT FALSE
AEXIT  EQU  AEXFAL+1     EXIT TRUE
AFAIL  EQU  AEXIT+1      FAIL EXIT
AGENCO EQU  AFAIL+1      GENERATE FLOATING POINT CONSTANT
AINTER EQU  AGENCO+1     ENTER INTERPRETER
ALDGRP EQU  AINTER+1     LOAD GROUP INTO CENTRAL
ANXSTM EQU  ALDGRP+1     INITIALIZE FOR NEXT STATEMENT
ANXTCH EQU  ANXSTM+1     SCAN NEXT CHARACTER
APUNCH EQU  ANXTCH+1     PUNCH CODE ROLL
AP2INI EQU  APUNCH+1     PUNCH ROLL CODE
ASTATU EQU  AP2INI+1     SAVE CURRENT COMPILER STATUS
ASYMSC EQU  ASTATU+1     SCAN SYMBOLIC NAME
ATAILS EQU  ASYMSC+1     RECORD START OF TAIL
A1STLT EQU  ATAILS+1     ISOLATE FIRST M39 LETTER ON W0
ADRIVE EQU  A1STLT+1     DRIVING TABLE ROUTINE
AOPTSA EQU  ADRIVE+1     SAVE OPTIONS ROUTINE
AOVERF EQU  AOPTSA+1     OVERFLOW HANDLER
*
RBWORK EQU  BASE+1*ROLLS+RWORK
*
OCTEMP EQU  RCTEMP       OP FIELD EQUATES
OACCUM EQU  RACCUM
OARRAY EQU  RARRAY
OCMARE EQU  RCMARE
OFXCON EQU  RFXCON
ODELTA EQU  RDELTA
OGSPRO EQU  RGSPRO
OLCCON EQU  RLCCON
OLDUMM EQU  RLDUMM
OLSPRO EQU  RLSPRO
OSCALA EQU  RSCALE
OSDB   EQU  RSDB
*
OUNDEF EQU  0            UNDEF'D LABEL FLAG (ON LABEL ROLL)
OCURLB EQU  4            CURRENT LABEL FLAG (ON LABEL ROLL)
*
LETTRK EQU  0
DIGITK EQU  1
HXLTRK EQU  2
*
       TITL 'PROGRAM QUOTES'
*
QTB    EQU  $
QALLOC EQU  1            ALLOCATION FAIL QUOTE
QDATCN EQU  QALLOC+1     DATA COUNT ERROR QUOTE
QID    EQU  QDATCN+1     ID CONFLICT FAIL QUOTE
QILLOP EQU  QID+1        ILLEGAL OPTION FAIL QUOTE
QNOLBL EQU  QILLOP+1     MISSING LABEL FAIL QUOTE
QNUMBE EQU  QNOLBL+1     NUMBER FAIL QUOTE
QSBSTM EQU  QNUMBE+1     SUBSTATEMENT FAIL QUOTE
QSCRIP EQU  QSBSTM+1     SUBSCRIPTS FAIL QUOTE
QSYNTA EQU  QSCRIP+1     SYNTAX FAIL QUOTE
QTYPE  EQU  QSYNTA+1     TYPE CONFLICT FAIL QUOTE
QUNCLS EQU  QTYPE+1      MISSING ONE OR MORE ENDIFS
QNESTD EQU  QUNCLS+1     DO LOOP INCORRECTLY NESTED
QMISKE EQU  QNESTD+1     MISSING KEYWORD
QINVC1 EQU  QMISKE+1     INVALID CONTROL STRUCTURE: ELSE
QINVC2 EQU  QINVC1+1     INVALID CONTROL STRUCTURE: ELSEIF
QINVC3 EQU  QINVC2+1     INVALID CONTROL STRUCTURE: ENDIF
QOVFLO EQU  QINVC3+1     PC OVERFLOW FAIL QUOTE
*
* EQUIVALENCE ALLOCATION ERROR MESSAGES
*
QEQDIS EQU  4            EQUIV VARS AT DIFFERENT LOCATIONS
QEQARE EQU  5            EQUIV VARS AT DIFFERENT AREAS
QEQBAC EQU  6            EQUIV EXTENDS COMMON AREA BACKWARD
QCMFUL EQU  7            EQUIV OVERFLOWS COMAREA
*
       DORG 0
QAND   EQU  $/2
       TEXT 'AND.* '
QCALL  EQU  $/2
       TEXT 'CALL* '
QCOMMO EQU  $/2
       TEXT 'COMMON* '
QCONTI EQU  $/2
       TEXT 'CONTINUE* '
QDATA  EQU  $/2
       TEXT 'DATA* '
QDIMEN EQU  $/2
       TEXT 'DIMENSION*'
QDBLPR EQU  $/2
       TEXT 'DOUBLEPRECISION*'
QDO    EQU  $/2
       TEXT 'DO* '
QDOWHI EQU  $/2
       TEXT 'DOWHILE(* '
QELSE  EQU  $/2
       TEXT 'ELSE* '
QELSEI EQU  $/2
       TEXT 'ELSEIF(*'
QEND   EQU  $/2
       TEXT 'END*'
QENDDO EQU  $/2
       TEXT 'ENDDO*'
QENDIF EQU  $/2
       TEXT 'ENDIF*'
QENDEQ EQU  $/2
       TEXT 'END=* '
QEOR   EQU  $/2
       TEXT 'EOR.* '
QERR   EQU  $/2
       TEXT 'ERR=* '
QEQ    EQU  $/2
       TEXT 'EQ.*'
QEQUIV EQU  $/2
       TEXT 'EQUIVALENCE*'
QEXTER EQU  $/2
       TEXT 'EXTERNAL* '
QFALSE EQU  $/2
       TEXT 'FALSE.* '
QFORMA EQU  $/2
       TEXT 'FORMAT(*'
QFUNC  EQU  $/2
       TEXT 'FUNCTION* '
QGE    EQU  $/2
       TEXT 'GE.*'
QGOTO  EQU  $/2
       TEXT 'GOTO* '
QGT    EQU  $/2
       TEXT 'GT.*'
QIF    EQU  $/2
       TEXT 'IF(*'
QIMPLI EQU  $/2
       TEXT 'IMPLICIT* '
QINCLU EQU  $/2
       TEXT 'INCLUDE*'
QINTEG EQU  $/2
       TEXT 'INTEGER*'
QLE    EQU  $/2
       TEXT 'LE.*'
QLIST  EQU  $/2
       TEXT '/LIST''* '
QLOGIC EQU  $/2
       TEXT 'LOGICAL*'
QLT    EQU  $/2
       TEXT 'LT.*'
QNE    EQU  $/2
       TEXT 'NE.*'
QNOLIS EQU  $/2
       TEXT '/NOLIST''* '
QNOT   EQU  $/2
       TEXT 'NOT.* '
QOR    EQU  $/2
       TEXT 'OR.*'
QPAUSE EQU  $/2
       TEXT 'PAUSE*'
QPROGR EQU  $/2
       TEXT 'PROGRAM*'
QREAD  EQU  $/2
       TEXT 'READ(*'
QREAL  EQU  $/2
       TEXT 'REAL* '
QREC   EQU  $/2
       TEXT 'REC=* '
QRETUR EQU  $/2
       TEXT 'RETURN* '
QSTATU EQU  $/2
       TEXT 'STATUS=*'
QSTOP  EQU  $/2
       TEXT 'STOP* '
QSUBR  EQU  $/2
       TEXT 'SUBROUTINE* '
QTHEN  EQU  $/2
       TEXT 'THEN* '
QTRUE  EQU  $/2
       TEXT 'TRUE.*'
QWRITE EQU  $/2
       TEXT 'WRITE(* '
*
*   INTERPRETER INSTRUCTION DEFINITIONS:
*
*   TYPE 1 POPS:
*
FEX    EQU  >0000        SET FAIL EXIT POINTER
JAF    EQU  >1000        JUMP IF ANSWER FALSE
JAT    EQU  >2000        JUMP IF ANSWER TRUE
JOW    EQU  >4000        JUMP IF W0=0
JSB    EQU  >5000        JUMP INTO SUBROUTINE
JUN    EQU  >6000        JUMP UNCONDITIONAL
JML    EQU  >7000
XIT    EQU  >7000        EXIT INTERPRETER
*
*   TYPE 2 POPS:
*
ADP    EQU  >8000        ADD TO W0
ANP    EQU  >8200        AND WITH W0
ASK    EQU  >8400        ASSIGN TO STORAGE AND KEEP
ASP    EQU  >8600        ASSIGN TO STORAGE AND PRUNE
CLA    EQU  >8800        CLEAR W0 AND ADD
EAD    EQU  >8A00        EXTRACT ADDRESS FIELD
EOP    EQU  >8C00        EXTRACT OP FIELD
ETA    EQU  >8E00        EXTRACT TAG FIELD
FET    EQU  >9000        FETCH
IAD    EQU  >9200        INSERT ADDRESS FIELD INTO W0
ITA    EQU  >9400        INSERT TAG FIELD INTO W0
MPY    EQU  >9600        MULTIPLY W0 BY
NOZ    EQU  >9800        SET NONZERO
TLY    EQU  >9800        TALLY
PAD    EQU  >9A00        PRECISION ADD
PLD    EQU  >9C00        PRECISION LOAD
POC    EQU  >9E00        PUT ON CODE ROLL
PSP    EQU  >A000        EXCLUSIVE OR WITH W0
PST    EQU  >A200        PRECISION STORE
QSA    EQU  >A400        QUOTE SCAN W/ANSWER
QSF    EQU  >A600        QUOTE SCAN OR FAIL
SAD    EQU  >A800        SET IF MATCHING ADDRESS FIELDS
SLE    EQU  >AA00        SET IF W0 LESS THAN OR EQUAL
SNE    EQU  >AC00        SET IF W0 NOT EQUAL
SNZ    EQU  >AE00        SET IF NON-ZERO
SPT    EQU  >B000        SET IF MATCHING P0 TAG FILEDS
STG    EQU  >B200        SET IF MATCHING TAG FILEDS
SUP    EQU  >B400        SUBTRACT FROM W0
SWT    EQU  >B600        SWITCH WITH W0
ZER    EQU  >B800        SET ZERO
*
*    TYPE 3 POPS
*
ARP    EQU  >C000        ASSIGN RELATIVE TO POINTER
BIM    EQU  >C100        BUILD INSTRUCTION BY MODE
BIN    EQU  >C200        BUILD INSTRUCTION
CAR    EQU  >C300        COPY AND RELEASE
CFC    EQU  >C400        COPY AND RELEASE FROM CODE ROLL
CTC    EQU  >C500        COPY AND RELEASE TO CODE ROLL
CLI    EQU  >C600        CLEAR AND ADD IMMEDIATE
CNT    EQU  >C700        COUNT NUMBER OF WORDS
CPO    EQU  >C800        COPY PLEX ON
CSA    EQU  >C900        CHARACTER SCAN W/ANSWER
CSF    EQU  >CA00        CHARACTER SCAN OR FAIL
EAW    EQU  >CB00        EFFECTIVE ADDRESS TO WORK
FLP    EQU  >CC00        FLIP
FRP    EQU  >CD00        FETCH RELATIVE TO POINTER
IND    EQU  >CE00        INDIRECT
LGA    EQU  >CF00        LOAD INVERTED GP TO CENTRL W/ANSWER
MOA    EQU  >D000        MOVE OFF W/ANSWER TO WORK ROLL
MON    EQU  >D100        MOVE ON FROM WORK ROLL
NCC    EQU  >D200        COPY #GPS &ROLL TO CODE ROLL
NOG    EQU  >D300        COUNT NUMBER OF GROUPS
PGO    EQU  >D400        PUT GROUP ON
PNG    EQU  >D500        POINTER TO NEW GROUP
POW    EQU  >D600        PRUNE OFF WORK ROLL
REG    EQU  >D700        REGISTER GROUP ON ROLL
REL    EQU  >D800        RELEASE
RSV    EQU  >D900        RESERVE
SCE    EQU  >DA00        SET IF CHARACTER EQUALS
SCK    EQU  >DB00        SET ON CHARACTER KEY
SCL    EQU  >DC00        SHIFT W0 CIRCULAR LEFT
SOP    EQU  >DD00        SET ON OP FIELD
SRA    EQU  >DE00        SEARCH W/ANSWER
SRD    EQU  >DF00        SET IF REMAINING DATA
W0     EQU  >E000        ARG SPECIFIES POP - W0 HOLDS ARG
W1     EQU  >E100        ARG SPECIFIES POP - W1 HOLDS ARG
W2     EQU  >E200        ARG SPECIFIES POP - W2 HOLDS ARG
W3     EQU  >E300        ARG SPECIFIES POP - W3 HOLDS ARG
*
*  POP DEFINITIONS FOR W0,W1,W2,W3
*  INSTRUCTIONS
*
*  TYPE 2 POPS
*
ADPX   EQU  0
ANPX   EQU  1
ASKX   EQU  2
ASPX   EQU  3
CLAX   EQU  4
EADX   EQU  5
EOPX   EQU  6
ETAX   EQU  7
FETX   EQU  8
IADX   EQU  9
ITAX   EQU  >A
MPYX   EQU  >B
NOZX   EQU  >C
PADX   EQU  >D
PLDX   EQU  >E
POCX   EQU  >F
PSPX   EQU  >10
PSTX   EQU  >11
QSAX   EQU  >12
QSFX   EQU  >13
SADX   EQU  >14
SLEX   EQU  >15
SNEX   EQU  >16
SNZX   EQU  >17
SPTX   EQU  >18
STGX   EQU  >19
SUPX   EQU  >1A
SWTX   EQU  >1B
ZERX   EQU  >1C
*
*  TYPE 3 POPS
*
ARPX  EQU   >0
BIMX  EQU   >1
BINX  EQU   >2
CARX  EQU   >3
CFCX  EQU   >4
CTCX  EQU   >5
CLIX  EQU   >6
CNTX  EQU   >7
CPOX  EQU   >8
CSAX  EQU   >9
CSFX  EQU   >A
EAWX  EQU   >B
FLPX  EQU   >C
FRPX  EQU   >D
INDX  EQU   >E
LGAX  EQU   >F
MOAX  EQU   >10
MONX  EQU   >11
NCCX  EQU   >12
NOGX  EQU   >13
PGOX  EQU   >14
PNGX  EQU   >15
POWX  EQU   >16
REGX  EQU   >17
RELX  EQU   >18
RSVX  EQU   >19
SCEX  EQU   >1A
SCKX  EQU   >1B
SCLX  EQU   >1C
SOPX  EQU   >1D
SRAX  EQU   >1E
SRDX  EQU   >1F
W0X   EQU   >20
W1X   EQU   >21
W2X   EQU   >22
W3X   EQU   >23
*
*
*  CHARACTER STRING EQUATES
*
ECC    EQU  >23          #
EA     EQU  >41          A
EASTRS EQU  >2A          *
EBLANK EQU  >20          ASCII BLANK
EC     EQU  >43          C
ECARRT EQU  >0D          CARRIAGE RETURN
ECOLON EQU  >3A          ; :
ECOMMA EQU  >2C          ; ,
ED     EQU  >44          D
EE     EQU  >45          E
EEQUAL EQU  >3D          =
EF     EQU  >46          F
EFAKEQ EQU  >0D
EH     EQU  >48          H
EI     EQU  >49          I
EL     EQU  >4C          L
ELPARE EQU  >28          (
EMINUS EQU  >2D          -
EM     EQU  >4D          M
EN     EQU  >4E          N
EP     EQU  >50          P
EPERIO EQU  >2E          .
EPLUS  EQU  >2B          +
EQUOTE EQU  >27          '
ER     EQU  >52          R
ERPARE EQU  >29          )
ES     EQU  >53          S
ESLASH EQU  >2F          /
ET     EQU  >54          T
EW     EQU  >57          W
EX     EQU  >58          X
EY     EQU  >59          Y
EZ     EQU  >5A          Z
EZERO  EQU  >30          0
ECAT   EQU  >40          @
*
*  DAT VARIABLE DATA AREA
*
DAT    EQU  0
KQTBDA EQU  DAT
KFALSE EQU  DAT
KPLUS  EQU  DAT
KZERO  EQU  DAT
KTRUE  EQU  KZERO+3
KMINUS EQU  KTRUE
KONE   EQU  KTRUE
KTWO   EQU  KONE+1
KTHREE EQU  KTWO+1
KFOUR  EQU  KTHREE+1
KFIVE  EQU  KFOUR+1
KSEVEN EQU  KFIVE+1
KEIGHT EQU  KSEVEN+1
KTWELV EQU  KEIGHT+1
KSXTEE EQU  KTWELV+1
KMONE  EQU  KSXTEE+1
KMAXCO EQU  KMONE+1
KMAXDM EQU  KMAXCO+1
KMAXLC EQU  KMAXDM+1
KMAXPT EQU  KMAXLC+1
KDEFLB EQU  KMAXPT+1
KSDBND EQU  KDEFLB+1
KADRFL EQU  KSDBND+1
KTAGFL EQU  KADRFL+1
KOPFLD EQU  KTAGFL+1
KBLANK EQU  KOPFLD+1
KBLANS EQU  KBLANK+1
KOVPCQ EQU  KBLANS+1
KLGPRE EQU  KFOUR
KRLPRE EQU  KFIVE        PRECEDENCE OF RELATIONAL OPERATOR
KBASES EQU  KOVPCQ+1
KLOCAL EQU  KONE
MBLANK EQU  KBASES+1
MH     EQU  MBLANK+3
MN     EQU  MH+1
MLOBLK EQU  MN+1
K39SQ  EQU  MLOBLK+1
*
KMARKE EQU  MBLANK       REQUIV SET DELIMETER
*
TGOTO  EQU  KZERO        GOTO TARGET FLAG (ON LABEL ROLL)
TINTEG EQU  KZERO        INTEGER TAG
*
TDUMMY EQU  K39SQ+1      DUMMY-ARRAY FLAG (ON ARRAY ROLL)
TEXEC  EQU  K39SQ+1      EXEC TARGET FLAG (ON LABEL ROLL)
TSREAL EQU  K39SQ+1
TADJUS EQU  TSREAL+1     ADJDIM-ARRAY FLAG (ON ARRAY ROLL)
TFORMA EQU  TSREAL+1     FORMAT LABEL FLAG (ON LABEL ROLL)
TDREAL EQU  TSREAL+1
TMISUS EQU  KTAGFL       MISUSED LABEL FLAG (ON LABEL ROLL)
TLOGIC EQU  KTAGFL       LOGICAL (BOOLEAN) TAG
PCTEMP EQU  TDREAL+1
PATEMP EQU  PCTEMP+1
PACCUM EQU  PATEMP+1
PALLOC EQU  PACCUM+1
PARRAY EQU  PALLOC+1
PARYEL EQU  PARRAY+1
PBASE  EQU  KZERO        PROGRAM BASE POINTER
PEXPON EQU  PARYEL+1
PMLABE EQU  PEXPON+1
PSCLR0 EQU  PMLABE+1
XF     EQU  PSCLR0+1
X100   EQU  TSREAL
X3FF   EQU  XF+1
X7FF   EQU  X3FF+1
*
* INLINE INTRINSIC FUNCTION OP FIELDS
*
CALL   EQU  RACCUM+17    DSPROG OP FIELD
CVN    EQU  CALL+1
CVE    EQU  CVN+1
IAND   EQU  CVE+1
IIOR   EQU  IAND+1
IEOR   EQU  IIOR+1
INOT   EQU  IEOR+1
*
* INTRINSIC FUNCTION TYPE FIELD EQUATES
I      EQU  0
R      EQU  1
D      EQU  2
L      EQU  3
*
* OPERATOR DRIVERS
*
* OP FIELD (BITS 0-5) HOLDS INDEX NUMBER
* TAG FIELD (BITS 6-7) IS SET TO HIGHEST ARGUMENT TYPE
* ADDRESS FIELD (BITS 8-15) HOLDS PRECEDENCE OF OPERATOR
*
DTERM  EQU  KZERO        START OF TERM MARKER
DEOTER EQU  KZERO        END OF TERM MARKER
*
DEOR   EQU  X7FF+1
DOR    EQU  DEOR+1
DAND   EQU  DOR+1
DNOT   EQU  DAND+1
DEQ    EQU  DNOT+1
DNE    EQU  DEQ+1
DLT    EQU  DNE+1
DGT    EQU  DLT+1
DLE    EQU  DGT+1
DGE    EQU  DLE+1
DSUB   EQU  DGE+1
DADD   EQU  DSUB+1
DMULT  EQU  DADD+1
DDIV   EQU  DMULT+1
DEXPON EQU  DDIV+1
DUMINU EQU  DEXPON+1
DSPROG EQU  DUMINU+1
*
* INSTRUCTIONS WITH ARGUMENT BUT NO COUNT
*
CB     EQU  0               00 B
CBAN   EQU  CB+1            01 JLT
CBAZ   EQU  CBAN+1          02 JEQ
CIM    EQU  CBAZ+1          03 INC
CAND   EQU  CIM+1           04 AND
CADD   EQU  CAND+1          05 ADD
CLOAD  EQU  CADD+1          06 LOAD
CSTORE EQU  CLOAD+1         07 STORE
CCOMPA EQU  CSTORE+1        08 COMPARE
CDIV   EQU  CCOMPA+1        09 DIVIDE
CMULT  EQU  CDIV+1          0A MULTIPLY
CSUB   EQU  CMULT+1         0B SUBTRACT
CSCLRI EQU  CSUB+1          0C SCALAR I/O
CARRYI EQU  CSCLRI+1        0D ARRAY I/O
CADJDI EQU  CARRYI+1        0E ADJUSTABLE I/O
CAOR   EQU  CADJDI+1        0F OR
CAEOR  EQU  CAOR+1          10 EXCLUSIVE OR
CSUBCH EQU  CAEOR+1         11 SUBTRACT CHECK
CADSCH EQU  CSUBCH+1        12 ADD CHECK
CLE    EQU  CADSCH+1        13 LESS THAN/EQUAL TO
CLT    EQU  CLE+1           14 LESS THAN
CGE    EQU  CLT+1           15 GREATER THAN/EQUAL TO
CGT    EQU  CGE+1           16 GREATER THAN
CNE    EQU  CGT+1           17 NOT EQUAL
CLABEL EQU  CNE+1           18 LABEL
CBOSX  EQU  CLABEL+1        19 BEGINNING OF STATEMENT
CFUNCE EQU  CBOSX+1         21 FUNCTION CALL
COR    EQU  CFUNCE+1        22 OR
CFORMA EQU  COR+1           23 FORMAT STATEMENT
*
CBOS   EQU  >1900
IHOLVA EQU  KZERO
*
JCLE   EQU  DSPROG+1
JCLT   EQU  JCLE+1
JCGE   EQU  JCLT+1
JCGT   EQU  JCGE+1
JCNE   EQU  JCGT+1
JCOR   EQU  JCNE+1
*
* Instructions with argument and word count
*
CCALL  EQU  >50             50 SUBROUTINE CALL
CFUNCT EQU  CCALL+1         51 INLINE FUNCTION
CCGTEX EQU  CFUNCT+1        52 COMPUTED GOTO
*
CADRL  EQU  CCGTEX+1        53 GEN ADDRESS LITERAL
CDATA  EQU  CADRL+1         54 ABSOLUTE DATA
CDATST EQU  CDATA+1         55 DATA STATEMENT START
CDELTA EQU  CDATST+1        56 ARRAY DELTA VALUE FOLLOWS
CISHFT EQU  >005E           5E ISHFT(i,j)
*
IENDAT EQU  JCOR+1          57 END DATA
IENDLG EQU  IENDAT+1        58 END LOGIC
ILIST  EQU  IENDLG+1        59 LISTING ON (W/00)
INOLIS EQU  ILIST+1         59 LISTING OFF (W/01)
IDATA  EQU  INOLIS+1        54
IABS   EQU  IDATA+1         5F
IANDK1 EQU  IABS+1
ICPK0  EQU  IANDK1+1
IRADAA EQU  ICPK0+1
IRADAT EQU  IRADAA+1
IRADIZ EQU  IRADAT+1
IRADTA EQU  IRADIZ+1
IRCPZA EQU  IRADTA+1
IRCPAT EQU  IRCPZA+1
IRCPCZ EQU  IRCPAT+1
IRCPIX EQU  IRCPCZ+1
IINV   EQU  IRCPIX+1
IRCPIZ EQU  IINV+1
IMULK1 EQU  IRCPIZ+1
IRORTA EQU  IMULK1+1
IREORT EQU  IRORTA+1
ICHSIG EQU  IREORT+1
ICONVR EQU  ICHSIG+1
COUNT  EQU  >6000
ISTOPI EQU  ICONVR+1
ISTRTI EQU  ISTOPI+1
ISTOP  EQU  ISTRTI+1
IPAUSE EQU  ISTOP+1
IRETUR EQU  IPAUSE+1
ISTOPN EQU  IRETUR+1
INDSCH EQU  ISTOPN+1
IMUL4K EQU  INDSCH+1
IMUL8K EQU  IMUL4K+1
*
*  VARIABLE DATA AREA
*
VARIAB EQU  >100
FCLABE EQU  VARIAB
FACTIO EQU  FCLABE+1
FACTIV EQU  FACTIO+1
FARG   EQU  FACTIV+1
FBLANK EQU  FARG+1
FDCT   EQU  FBLANK+1
FDCTAR EQU  FDCT+1
FEND   EQU  FDCTAR+1
FSINGL EQU  FEND+1
FIFARG EQU  FSINGL+1
FIO    EQU  FIFARG+1
FINDRC EQU  FIO+1
FJUMP  EQU  FINDRC+1
FLONGN EQU  FJUMP+1
FMINUS EQU  FLONGN+1
FMXMOD EQU  FMINUS+1
FNTSPE EQU  FMXMOD+1
FSPROG EQU  FNTSPE+1
F1STPG EQU  FSPROG+1
FINCL  EQU  F1STPG+1
FMAPCT EQU  FINCL+1
FX1    EQU  FMAPCT+1
FUNCLS EQU  FX1+1
FPRGEN EQU  FUNCLS+1
FSAVEO EQU  FPRGEN+1
*
* POINTER VARIABLES
*
PCURCH EQU  FSAVEO+1
PLSTCH EQU  PCURCH+1
PRECCH EQU  PLSTCH+1
PERRCH EQU  PRECCH+1
PERRMS EQU  PERRCH+1
PSTALB EQU  PERRMS+1
*
* TEMP VARIABLES
*
VCURCH EQU  PSTALB+1
VLSTCH EQU  VCURCH+1
*
VCTMPS EQU  VLSTCH+1
VITMPS EQU  VCTMPS+1
VMTMPS EQU  VITMPS+1
VCATMP EQU  VMTMPS+1
VIATMP EQU  VCATMP+1
VMATMP EQU  VIATMP+1
VCMLBL EQU  VMATMP+1
*
VCDIME EQU  VCMLBL+1
VCSCAN EQU  VCDIME+1
VCUSED EQU  VCSCAN+1
VARGCN EQU  VCUSED+1
VCRNTO EQU  VARGCN+1
VCSIZE EQU  VCRNTO+1
VDSIZE EQU  VCSIZE+1
VELEMS EQU  VDSIZE+1
VEND   EQU  VELEMS+1
VERR   EQU  VEND+1
VINDIR EQU  VERR+1
VINSTR EQU  VINDIR+1
VKEYCN EQU  VINSTR+1
VKEYWD EQU  VKEYCN+1
VLBLKE EQU  VKEYWD+1
VMAXSC EQU  VLBLKE+1
VMAXEQ EQU  VMAXSC+1
VMINEQ EQU  VMAXEQ+1
VOFFSE EQU  VMINEQ+1
VORD   EQU  VOFFSE+1
VREC   EQU  VORD+1
VSTATU EQU  VREC+1
VTICTO EQU  VSTATU+1
VVARCN EQU  VTICTO+1
VCLASS EQU  VVARCN+1
VINTDR EQU  VCLASS+1
VINOPL EQU  VINTDR+1
VDOLOO EQU  VINOPL+1
VPAB   EQU  VDOLOO+1
VFLENT EQU  VPAB+4
VFDESC EQU  VFLENT+1
*
CENTRA EQU  VFDESC+16
*
VSYM1  EQU  CENTRA
VSYM2  EQU  VSYM1+1
VSYM3  EQU  VSYM2+1
*
VDATA1 EQU  VSYM3+1
VDATA2 EQU  VDATA1+1
VDATA3 EQU  VDATA2+1
VDATA4 EQU  VDATA3+1
*
MPAC   EQU  VDATA4+1
MPACP1 EQU  MPAC+1
*
VTEMP  EQU  MPACP1+2
VPROGN EQU  VTEMP+3
*
* OPTION FLAGS
*
FBATCH EQU  VPROGN+3
FSC    EQU  FBATCH+1
FMAP   EQU  FSC+1
FNW    EQU  FMAP+1
FOBJLS EQU  FNW+1
FNRWDG EQU  FOBJLS+1
FXMODE EQU  FNRWDG+1
FNC    EQU  FXMODE+1
FNS    EQU  FNC+1
*
       END
