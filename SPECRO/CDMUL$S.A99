	TITL	'COMPLEX *16 PRECISION MATH MULTIPLY'
	IDT     'CDMUL$'
*
*  COMPLEX *16 MULTIPLICATION
*
*  ON ENTRY, THE FLOATING POINT ACCUMULATOR IN R5,R6,R7 AND R8
*  CONTAIN THE REAL PORTION OF ONE ARGUMENT.  THE FACIM$ CONTAINS
*  THE IMAGINARY PORTION OF THE ARGUMENT.  R2 POINTS TO AN EIGHT
*  WORD AREA WHICH CONTAINS THE SECOND ARGUMENT.
*
*  UPDATE HISTORY:
*
*    4.4        28-AUG-89     INITIAL VERSION
*
	DEF  CDMUL$		; DOUBLE COMPLEX MULTIPLY
	REF  FACIM$		; IMAGINARY PORTION OF FAC
*
	COPY "FORTPAR:"
*
	UNL
	IF   GENEVE
	COPY "EQUATES:MATH.EQ9"
	ENDIF
	COPY "EQUATES:FORTEX.EQ9"
	LIST

*
CDMUL$	EQU  $
	LI   R0,A		; LOAD CONSTANTS
	MOV  R5,*R0+		; SAVE A
	MOV  R6,*R0+
	MOV  R7,*R0+
	MOV  R8,*R0+
*
	LI   R1,FACIM$		; SAVE B
	MOV  *R1+,*R0+
	MOV  *R1+,*R0+
	MOV  *R1+,*R0+
	MOV  *R1,*R0+
*
	MOV  *R2+,*R0+		; SAVE C
	MOV  *R2+,*R0+
	MOV  *R2+,*R0+
	MOV  *R2+,*R0+
*
	MOV  *R2+,*R0+		; SAVE D
	MOV  *R2+,*R0+
	MOV  *R2+,*R0+
	MOV  *R2,*R0
*
	MOV  R11,R12		; SAVE RETURN VECTOR
	BL   @MULTIT
	DATA A
	DATA C
	DATA AC
*
	BL   @MULTIT
	DATA B
	DATA D
	DATA BD
*
	BL   @MULTIT
	DATA A
	DATA D
	DATA AD
*
	BL   @MULTIT
	DATA B
	DATA C
	DATA BC
*
	LI   R1,ARG		; COMPUTE FINAL RESULTS
	LI   R0,AC
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0,*R1
*
	LI   R1,FAC
	LI   R0,BD
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0,*R1
*
	IF   GENEVE
	MOV  R3,R9		SAVE BASE
	LI   R0,FSUB
	LI   R1,RESULT
	LI   R2,FAC
	LI   R3,ARG
	XOP  @DMATXP,0
	MOV  R9,R3		RESTORE BASE
	LI   R0,RESULT
	ELSE
	BLWP @CXMLLN
	DATA FSUB
	LI   R0,FAC
	ENDIF
	MOV  *R0+,R5		SAVE REAL PART
	MOV  *R0+,R6
	MOV  *R0+,R7
	MOV  *R0+,R8
*
*  NOW COMPUTE IMAGINARY SECTION
*
	LI   R1,ARG
	LI   R0,AD
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
*
	LI   R1,FAC
	LI   R0,BC
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	IF   GENEVE
	MOV  R3,R9		SAVE BASE
	LI   R0,FADD
	LI   R1,RESULT
	LI   R2,FAC
	LI   R3,ARG
	XOP  @DMATXP,0
	MOV  R9,R3		RESTORE BASE
	LI   R0,RESULT
	ELSE
	BLWP @CXMLLN
	DATA FADD
	LI   R0,FAC
	ENDIF
	LI   R1,FACIM$		; SAVE IMAGINARY PORTION
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0,*R1
	MOV  R5,R5		; SET STATUS
	JNE  SETST1
	MOV  @FACIM$,@FACIM$
SETST1	EQU  $
	B    *R12		; RETURN
*
*  MULTIT : MULTIPLY THE TWO ARGUMENTS, AND STORE THE RESULT IN
*	    THE THIRD ARGUMENT.
*
MULTIT	EQU  $
	MOV  *R11+,R0		; FIRST ARGUMENT
	LI   R1,FAC
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0,*R1
*
	MOV  *R11+,R0		; SECOND ARGUMENT
	LI   R1,ARG
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0,*R1
*
	IF   GENEVE
	MOV  R3,R9
	LI   R0,FMULT		; FLOATING POINT MULTIPLY
	LI   R1,RESULT
	LI   R2,FAC
	LI   R3,ARG
	XOP  @DMATXP,0		; DO MATH XOP
	MOV  R9,R3
	LI   R0,RESULT
	ELSE
	BLWP @CXMLLN		; CALL CONSOLE ROUTINE
	DATA FMULT
	LI   R0,FAC
	ENDIF
	MOV  *R11+,R1		; PARTIAL PRODUCT LOCATION
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0+,*R1+
	MOV  *R0,*R1
	B    *R11
*
	IF   GENEVE
FAC	BSS  8
ARG	BSS  8
RESULT	BSS  8
DMATXP	DATA MATXOP
	ENDIF
*
*  CALLED ARGUMENTS (IMAGINARY NUMBERS):
*
A	BSS  8
B	BSS  8
C	BSS  8
D	BSS  8
*
*  PARTIAL SOLUTION PRODUCTS:
*
AC	BSS  8
BD	BSS  8
AD	BSS  8
BC	BSS  8
*
	END
