	TITL  'FORTRAN5: FORTRAN1/2/3/4 DATA AREA'
*
*   FORTRAN5:  This module contains the data area which is shared
*	       between fortran1, fortran2, fortran3, and fortran4.
*
*	       Three types of data are defined:
*
*		a. Equates common to both modules (such as stack
*		   definition numbers).
*		b. Static Data Area (DAT), including quotes for
*		   scanning.
*		c. Variable Data Area (VAR).
*
*  Update History:
*
*    ????               Initial Version
*    27-Dec-89          Added ASIN, ACOS, DASIN, DACOS to intrinsic table.
*    29-DEC-89          Fixed byte constant in CALL argument list.
*
*   PASS1 is set as follows:
*
*	0 - FORTRAN2
*       1 - FORTRAN1
*       3 - FORTRAN3/FORTRAN4
*
*   STACK DEFINITIONS:
*
	LIST
	IFEQ PASS1		If FORTRAN2 definition
	AORG 0			So DORG's will be absolute, not relative
	ENDIF
*
CHAFIL	EQU  40			NUMBER OF CHARACTERS/FILE NAME
MAXPTR	EQU  >80		MAXIMUM POINTER (MAX # OF EACH TYPE)
REXPON	EQU  0			00 Exponential Routine Names
RINTRI	EQU  REXPON+2		02 INTRINSIC FUNCTION NAMES (PART 1)
RINTR1	EQU  RINTRI+2		04 INTRINSIC FUNCTION NAMES (PART 2)
ROPTIO	EQU  RINTR1+2		06 Compilation Options
*
RINPUT	EQU  ROPTIO+2		08 Input Buffer
RBUFFE	EQU  RINPUT+2		0A Intermediate Code Buffer
RCODE	EQU  RBUFFE+2		0C Statement Code
RPROLO	EQU  RCODE+2		0E Subprogram Setup Code
RTEMP	EQU  RPROLO+2		10 Temp Stack
REXIT	EQU  RTEMP+2		12 Exit Stack
RWORK	EQU  REXIT+2		14 Work Stack
RPOLIS	EQU  RWORK+2		16 Polish stack (expressions)
RPTRS	EQU  RPOLIS+2		18 Expression Result Pointers
RDOLOO	EQU  RPTRS+2		1A Closing code for open DO loops
RTEMP1	EQU  RDOLOO+2		1C TEMP STACK #1
*
RREFLB	EQU  RTEMP1+2		1E Labels referenced in current statements
RDELTA	EQU  RREFLB+2		20 Incremented address
RMODAD	EQU  RDELTA+2		22 Modified address literal
REXEC	EQU  RMODAD+2		24 Execute target labels (unused)
RLABEL	EQU  REXEC+2		26 Program labels
RMLABE	EQU  RLABEL+2		28 Made labels
RFXCON	EQU  RMLABE+2		2A INTEGER *2, LOGICAL *2 CONSTANTS
RBYCON	EQU  RFXCON+2		2C INTEGER *1  CONSTANTS
RI4CON	EQU  RBYCON+2		2E INTEGER *4  CONSTANTS
RSPCON	EQU  RI4CON+2		30 REAL    *4  CONSTANTS
RDPCON	EQU  RSPCON+2		32 REAL    *8  CONSTANTS
RC8CON	EQU  RDPCON+2		34 COMPLEX *8  CONSTANTS
RC6CON	EQU  RC8CON+2		36 COMPLEX *16 CONSTANTS
RHOLVA	EQU  RC6CON+2		38 Hollerith Variable (format) words
RCTEMP	EQU  RHOLVA+2		3A Numeric Temps
RATEMP	EQU  RCTEMP+2		3C Address Temps
RLDUMM	EQU  RATEMP+2		3E Local Dummies  (Statement function args)
RGDUMM	EQU  RLDUMM+2		40 Global Dummies (Subprogram arguments)
*
RSCALE	EQU  RGDUMM+2		42 Scalar Variables
RGSPRO	EQU  RSCALE+2		44 Referenced Global Subprograms
RARRAY	EQU  RGSPRO+2		46 Array Variables
RPROGR	EQU  RARRAY+2		48 Programs Referenced
RLSPRO	EQU  RPROGR+2		4A LOCAL SPROGS (STMT FUNCTIONS)
RACCUM	EQU  RLSPRO+2		4C ACCUMULATOR
RASTAT	EQU  RACCUM+2		4E ARRAY STATISTICS
RALLOC	EQU  RASTAT+2		50 ALLOCATION GROUPS
RCOMMO	EQU  RALLOC+2		52 NAMES DECLARED IN BLANK COMMON
RCMNAM	EQU  RCOMMO+2		54 NAMES DECLARED IN COMAREAS
RCMARE	EQU  RCMNAM+2   	56 Common Area
RPOINT	EQU  RCMARE+2		58 NAMES DECLARED IN POINTER VARIABLES
RINTEG	EQU  RPOINT+2		5A 00 INTEGER *2
RBYTE	EQU  RINTEG+2		5C 08 INTEGER *1
RINTE4	EQU  RBYTE+2		5E 10 INTEGER *4
RSREAL	EQU  RINTE4+2		60 18 REAL *4
RDREAL	EQU  RSREAL+2		62 20 REAL *8
RCMPL8	EQU  RDREAL+2		64 28 COMPLEX *8
RCMPL6	EQU  RCMPL8+2		66 30 COMPLEX *16
RLOGIC	EQU  RCMPL6+2		68 38 LOGICAL *2
REQUIV	EQU  RLOGIC+2		6A NAMES DECLARED EQUIVALENCE
REXTER	EQU  REQUIV+2		6C NAMES DECLARED EXTERNAL
RIMPLI	EQU  REXTER+2		6E LETTERS DECLARED FOR IMPLICIT TYPE
RIF  	EQU  RIMPLI+2   	70 IF STACK
*
*  Compute number of stack (times 2) and last stack number (*2)
*
ROLLS	EQU  RIF+2
RLAST	EQU  ROLLS-2
*
*  Other important equates
*
MADRFL	EQU  >007F		Address field mask
MTAGFL	EQU  >0380		Tag field mask
MOPCFL	EQU  >FC00		Opcode field mask
*
*  Variable Type Fields
*
*
*  Types for each type of variable:
*
*
*
INTYPE	EQU  >0000		00 00 - INTEGER *2
BYTYPE	EQU  >0080		01 08 - INTEGER *1
I4TYPE	EQU  >0100		02 10 - INTEGER *4
SPTYPE	EQU  >0180		03 18 - REAL *4
DPTYPE	EQU  >0200		04 20 - REAL *8
C8TYPE	EQU  >0280		05 28 - COMPLEX *4
C6TYPE	EQU  >0300		06 30 - COMPLEX *8
LGTYPE	EQU  >0380		07 38 - LOGICAL *2
*
I	EQU  INTYPE/128		INTEGER *2 TYPE
K	EQU  BYTYPE/128		INTEGER *1 TYPE
J	EQU  I4TYPE/128		INTEGER *4 TYPE
R	EQU  SPTYPE/128		REAL *4 TYPE
D	EQU  DPTYPE/128		REAL *8 TYPE
C	EQU  C8TYPE/128		COMPLEX *8 TYPE
E	EQU  C6TYPE/128		COMPLEX *16 TYPE
L	EQU  LGTYPE/128		LOGICAL *2 TYPE
*
*  Some psuedo instructions need the above equates divided by 2.
*
DINTEG	EQU  RINTEG/2
DBYTE	EQU  RBYTE/2
DINTE4	EQU  RINTE4/2
DSREAL	EQU  RSREAL/2
DDREAL	EQU  RDREAL/2
DLOGIC	EQU  RLOGIC/2
DASTAT	EQU  RASTAT/2
DX3	EQU  RALLOC/2
DALLOC	EQU  RALLOC/2
DCMLX8	EQU  RCMPL8/2
DCMLX6	EQU  RCMPL6/2
*
RX3  	EQU  RALLOC		HOLLRITH VARIABLE ROLL
RERRSY	EQU  RPROLO		ALLOCATION ERROR ROLL
*
*  RUNGS ARE MERELY A DEPTH INTO THE CURRENT STACK (FORTRAN2 ONLY)
*
RUNG0	EQU  0
RUNG1	EQU  2
RUNG2	EQU  4
RUNG3	EQU  6
RUNG4	EQU  8
RUNG5	EQU  10
*
OUNDEF	EQU  0			UNDEF'D LABEL FLAG (ON LABEL ROLL)
OCURLB	EQU  8			CURRENT LABEL FLAG (ON LABEL ROLL)
*
LETTRK	EQU  0			CHECK IF CHARACTER IS A LETTER
DIGITK	EQU  1			CHECK IF CHARACTER IS A DIGIT
HXLTRK	EQU  2			CHECK IF CHARACTER IS A HEX DIGIT
*
*  DEFAULT LOGICAL UNITS FOR ACCEPT, PRINT, AND TYPE
*
OPLACP	EQU  6			UNIT 6 IS CRT
OPLPRI	EQU  9			UNIT 9 IS PRINTER
OPLTYP	EQU  6			UNIT 6 IS CRT
*
*  THE FOLLOWING ARE ERROR MESSAGE NUMBERS
*
QALLOC	EQU  1			ALLOCATION FAIL QUOTE
QDATCN	EQU  QALLOC+1		DATA COUNT ERROR QUOTE
QID  	EQU  QDATCN+1		ID CONFLICT FAIL QUOTE
QILLOP	EQU  QID+1		ILLEGAL OPTION FAIL QUOTE
QNOLBL	EQU  QILLOP+1		MISSING LABEL FAIL QUOTE
QNUMBE	EQU  QNOLBL+1		NUMBER FAIL QUOTE
QSBSTM	EQU  QNUMBE+1		SUBSTATEMENT FAIL QUOTE
QSCRIP	EQU  QSBSTM+1		SUBSCRIPTS FAIL QUOTE
QSYNTA	EQU  QSCRIP+1		SYNTAX FAIL QUOTE
QTYPE	EQU  QSYNTA+1		TYPE CONFLICT FAIL QUOTE
QUNCLS	EQU  QTYPE+1		MISSING ONE OR MORE ENDIFS
QNESTD	EQU  QUNCLS+1		DO LOOP INCORRECTLY NESTED
QMISKE	EQU  QNESTD+1		MISSING KEYWORD
QINVC1	EQU  QMISKE+1		INVALID CONTROL STRUCTURE: ELSE
QINVC2	EQU  QINVC1+1		INVALID CONTROL STRUCTURE: ELSEIF
QINVC3	EQU  QINVC2+1		INVALID CONTROL STRUCTURE: ENDIF
QOVFLO	EQU  QINVC3+1		PC OVERFLOW FAIL QUOTE
QCHARC	EQU  QOVFLO+1		ILLEGAL CHARACTER CONVERSION
*
* EQUIVALENCE ALLOCATION ERROR MESSAGES
*
QEQDIS	EQU  4			EQUIV VARS AT DIFFERENT LOCATIONS
QEQARE	EQU  5			EQUIV VARS AT DIFFERENT AREAS
QEQBAC	EQU  6			EQUIV EXTENDS COMMON AREA BACKWARD
QCMFUL	EQU  7			EQUIV OVERFLOWS COMAREA
*
	IFEQ PASS1
	DORG 0			FORTRAN2 ONLY
	ENDIF
*
	UNL
	IFNE PASS1		FORTRAN1/FORTRAN3 ONLY
	LIST
PREAOR	EQU  $			PRE AORG RELATIVE ADDRESS
	AORG FOR5ST
*
*  THE FOLLOWING MEMORY LOCATIONS ARE SHARED BETWEEN
*  FORTRAN1 AND FORTRAN3.  THEY ARE SCRATCH FOR EACH
*  MODULE (NO NEED TO SAVE BETWEEN EXECUTIONS)
*
STARTM	EQU  $
SA1ADS	BSS  2			SCRATCH AREA #1 START
SA1ADE	BSS  2			SCRATCH AREA #1 END
SA2ADS	BSS  2			SCRATCH AREA #2 START
SA2ADE	BSS  2			SCRATCH AREA #2 END
F4LOW	BSS  2			FILE 4 LOW
F4HIGH	BSS  2			FILE 4 HIGH
F4PABA	BSS  2	  		FILE 4 PAB ADDRESS
F4OPEN	BSS  2				OPEN FLAG
F4RECS	BSS  2				# RECORDS
F4END	BSS  2				END OF FILE FLAG
F4POIN	BSS  2				POINTER
F5LOW	BSS  2			FILE 5 LOW
F5HIGH	BSS  2			FILE 5 HIGH
F5PABA	BSS  2	 	 	FILE 5 PAB ADDRESS
F5OPEN	BSS  2				OPEN FLAG
F5RECS	BSS  2				# RECORDS
F5END	BSS  2				END ADDRESS
F5POIN	BSS  2				POINTER
*
F5STAC	BSS  10	 		TEMP COMMAND STACK
*
IOTWSP	BSS  32	 		TEMP WORKSPACE FOR I/O OPTIMIZER INTERCEPT
*
*  FORTRAN1/FORTRAN3 INTERFACE VARIABLES
*
FEOD	BSS  2			EOD ENCOUNTERED FLAG
VX2SIZ	BSS  2			SIZE OF S2 FILE RECORD
PTAIRS	BSS  2			TAIL RECORD NUMBER
PTAILR	BSS  2			TAIL RECORD OFFSET
*
FREEBL	EQU  $
	ENDIF
	UNL
	IFEQ PASS1-1
	LIST
*
**********************************************************************
*  THE FOLLOWING DEFINITIONS ARE STRICTLY RELATED TO FORTRAN1:
**********************************************************************
*
VSAVBU	BSS  80	 	1 RECORD SAVE
*
*  BLOCK TO GET SCRATCH FILE #
*
SCRFIL	BSS  4
*
*  BLOCK WHICH HOLDS OPTIONS
*
OPTFIL	BSS  22
	EVEN
*
*  BLOCK FOR DEBUGGER
*
GETBUF	BSS  7
	EVEN
*
*  PAB'S FOR FORTRAN 3
*
INPPAB	BSS  9
INPFIL	BSS  CHAFIL+1
*
	EVEN
OBJPAB	BSS  9
OBJFIL	BSS  CHAFIL+1
*
	EVEN
LISPAB	BSS  9
LISFIL	BSS  CHAFIL+1
*
	EVEN
CRTPAB  BSS  9
CRTFIL	BSS  CHAFIL+1
	EVEN
*
*  MISC. VARIABLES.
*
PCENTR	BSS  2		POINTER TO CENTRAL
PCRRNT	BSS  2		CURRENT POINTER SAVE
PLIMIT	BSS  2		UPPER LIMIT OF SEARCH
PPTRXI	BSS  2		RETURN VECTOR SAVE
VARG 	BSS  2		SAVE OF PASSED ARGUMENT
VCLUES	BSS  2		CURRENT CLUE SIZE
VCOUNT	BSS  2		COUNT SAVE
VMGPSI	BSS  2		TEMP CELL
VSTACN	BSS  2		CURRENT STACK NUMBER SAVE
VSRCEN	BSS  2		SAVE OF STACK NUMBER
VREADR	BSS  2	  	RETURN VECTOR SAVE
FASTSR	BSS  2		FAST SEARCH (1) OR NOT(0)
*
* GENFLC VARIABLES
*
SA7R11	BSS  2	  	RETURN SAVE FOR EXPON ROUTINE
*
RESSTR	EQU  $	  	STRING FOR CONSTANT
	BSS  2	  	LENGTH
	BSS  32	 	STRING
TABEND	BSS  2	  	TABLE END
PSYMBO	BSS  2
VCCHAR	BSS  2
VCWORD	BSS  2
*
PTRANS	BSS  2
VEXCES	BSS  2
VRCDCN	BSS  2
*
* FOLLOWING 4 VARIABLES MUST BE CONTINUOUS
*
VSTATC	BSS  10	  	CHARACTER SAVE (VCURCH & PCURCH )
*
VCHARS	BSS  10	  	CHARACTER SAVE (VCURCH & PCURCH )
*
VX2CNT	BSS  2	  	 # OF X2 RECORDS TO WRITE
*
*  ROLL SAVE AREA FOR STATEMENT FAIL (basically # rolls * 2)
*
RTSV 	BSS  ROLLS+2	ROLL TOPS SAVE
	EVEN
RBSV 	BSS  ROLLS+2	ROLL BOTTOMS SAVE
	EVEN
*
*  MISC. DATA CELLS
*
VLINES	BSS  2		NUMBER OF LINES PRINTED ON PAGE
FANSWE	BSS  2		ANSWER FLAG
FTRUNC	BSS  2
PFAILE	BSS  2
PLOCN	BSS  2
AF2LEN	BSS  2	  	LENGTH OF FORTRAN 2
POP  	BSS  2	  	POP START ADDRESS
ALLOC	BSS  2	  	ALLOC START ADDRESS
START	BSS  2	  	START SCAN START ADDRESS
OPTSCA	BSS  2	  	OPTION SCAN START ADDRESS
ZNTCOM	BSS  2	  	ZNTCOM START
ZNUMBE	BSS  2	  	ZNUMBE START
ZSYNTA	BSS  2	  	SYNTAX FAIL ADDRESS
KBIM 	BSS  2	  	BIM INTERPRETIVE SUBR START
*
EXFILE	BSS  32	 	HOLDS FILE NAME FOR I/O ERROR HANDLER
*
SAVDEB	BSS  2		DEBUGGER RETURN LEVEL SAVE
TRACE	BSS  2		DEBUGGER TRACE ADDRESS
SNAPLO	BSS  2		SNAP LOCATION FOR DEBUGGER
SAVGCS  BSS  2		RETURN LEVEL SAVE FOR GET CONSTANT ROUTINE
CMDADR	BSS  122	120 bytes for command, 1 byte for length, 1 spare
EXPONF	BSS  2		SCSN: Exponent flag
MINUSF	BSS  2		SCSN: Minus flag
CSNPTR	BSS  2		SCSN: Pointer
*
FREEEN	EQU  $	  	FREE BLOCK END
	ENDIF
	UNL
	IFEQ PASS1-3
	LIST
*
*  FORTRAN3 DEFINITIONS ONLY
*
BARREL	BSS  64	 	BARREL
VBARLS	EQU  $-2
*
*  FORTRAN LISTING PRINT LINE SHELL
*
TFORMA	BSS  4
TREC 	BSS  8		RECORD NUMBER
PRINTB	BSS  2
PRINB2	BSS  78
TERRMS	EQU  TFORMA+16
*
*  OBJECT CODE PUNCH BUFFER
*
PUNCHB	EQU  $
	BSS  70	 	CODE AREA
LCHKSU	BSS  2	  	CHECKSUM & END OF RECORD
	BSS  1
LSEQNO	BSS  10	 	SEQUENCE NUMBER
	EVEN
*
AX2BFM	BSS  2
AEX2BU	BSS  2
*
ZERODT	EQU  $	  	START OF ZERO DATA
FITMCM	BSS  2	  	ATTEMPT TO INITIALIZE COMMON DATA
FOBJLS	BSS  2	  	PRODUCE SYMBOLIC OBJECT LISTING
FLOCAL	BSS  2	  	TAILREAD -- LOCAL ALLOC GROUP READ
FMAIN	BSS  2	  	MAIN PROGRAM (-1) OR NOT (0)
VCERRL	BSS  2	  	ERROR LABEL COUNT
VCERRS	BSS  2	  	ERROR LINE COUNT
VCWARN	BSS  2	  	WARNING LINE COUNT
VCALER	BSS  2	  	ERROR ALLOCATION COUNT
VPAGE	BSS  2	  	PAGE NUMBER
VREC 	BSS  2	  	SOURCE RECORD NUMBER
VCMITM	BSS  2	  	MAP ITEMS PER LINE COUNT
*
*  SPECIAL ITEM REFERENCE POINTERS.
*
PSPSTA	EQU  $		START OF SPECIAL POINTERS AREA
PINENT	BSS  2		INITIAL ENTRY
PSPADD	BSS  2		SINGLE PRECISION ADD
PSPSUB	BSS  2				 SUBTRACT
PSPMUL	BSS  2				 MULTIPLY
PSPDIV	BSS  2				 DIVIDE
PSPCMP	BSS  2				 COMPARE
PDPADD	BSS  2		DOUBLE PRECISION ADD
PDPSUB	BSS  2				 SUBTRACT
PDPMUL	BSS  2				 MULTIPLY
PDPDIV	BSS  2				 DIVIDE
PDPCMP	BSS  2				 COMPARE
PC8LOA	BSS  2		COMPLEX *8	 LOAD
PC8STO	BSS  2				 STORE
PC8ADD	BSS  2				 ADD
PC8SUB	BSS  2				 SUBTRACT
PC8MUL	BSS  2				 MULTIPLY
PC8DIV	BSS  2				 DIVIDE
PC8CMP	BSS  2				 COMPARE
PC6LOA	BSS  2		COMPLEX *16	 LOAD
PC6STO	BSS  2				 STORE
PC6ADD	BSS  2				 ADD
PC6SUB	BSS  2				 SUBTRACT
PC6MUL	BSS  2				 MULTIPLY
PC6DIV	BSS  2				 DIVIDE
PC6CMP	BSS  2				 COMPARE
*
PC8NEG	BSS  2		COMPLEX *8	 NEGATE
PC6NEG	BSS  2		COMPLEX *16	 NEGATE
*
PI4DIV	BSS  2		   INTEGER *4 SIGNED DIVISION
PI4MUL	BSS  2		   INTEGER *4 SIGNED MULTIPLICATION
PCGTEX	BSS  2		   COMPUTED GOTO EXECUTION
PSTOP	BSS  2		   STOP STATEMENT
PSTOPN	BSS  2		   STOP WITH NUMBER STATEMENT
PPAUSE	BSS  2		   PAUSE (W/NUMBER) STATEMENT
PNUMBC	BSS  2		   NUMBER CHECK
PSUBCH	BSS  2		   SUBTRACT CHECK
PADDCH	BSS  2		   ADD CHECK
PCALL	BSS  2		   CALL SUBROUTINE
PCALLI	BSS  2		   CALL SUBROUTINE/INDIRECT
PFUNCT	BSS  2		   FUNCTION (INLINE) CALL
PFUNCI	BSS  2		   FUNCTION (INLINE) CALL INDIRECT
*
*  CONVERSIONS
*
PIACVT	BSS  2			I*1 TO R*4
PIDCVT	BSS  2			I*1 TO R*8
PICCVT	BSS  2			I*1 TO C*8
PIECVT	BSS  2			I*1 TO C*16
*
PKACVT	BSS  2			I*1 TO R*4
PKDCVT	BSS  2			I*1 TO R*8
PKCCVT	BSS  2			I*1 TO C*8
PKECVT	BSS  2			I*1 TO C*16
*
PJACVT	BSS  2			I*4 TO R*4
PJDCVT	BSS  2			I*4 TO R*8
PJCCVT	BSS  2			I*4 TO C*8
PJECVT	BSS  2			I*4 TO C*16
*
PAICVT	BSS  2			R*4 TO I*1
PAKCVT	BSS  2			R*4 TO I*2
PAJCVT	BSS  2			R*4 TO I*4
PAECVT	BSS  2			R*4 TO C*16
*
PDICVT	BSS  2			R*8 TO I*1
PDKCVT	BSS  2			R*8 TO I*2
PDJCVT	BSS  2			R*8 TO I*4
PDECVT	BSS  2			R*8 TO C*16
*
PCICVT	BSS  2			C*8 TO I*1
PCKCVT	BSS  2			C*8 TO I*2
PCJCVT	BSS  2			C*8 TO I*4
PCECVT	BSS  2			C*8 TO C*16
*
PEICVT	BSS  2			C*16 TO I*1
PEKCVT	BSS  2			C*16 TO I*2
PEJCVT	BSS  2			C*16 TO I*4
PECCVT	BSS  2			C*16 TO C*8
PSPEND	EQU  $-2		END OF SPECIAL POINTERS AREA
*
ZERODA	EQU  $	  	END OF ZERO DATA
*
PCURHD	BSS  2	  	CURRENT LOAD ITEM HEADER
PERRCH	BSS  2	  	STATEMENT ERROR POSITION
PERRMS	BSS  2	  	STATEMENT ERROR NUMBER
PRECCH	BSS  2	  	STATEMENT RECORD CHAR POSITION
PNEXTW	BSS  2	  	NEXT INTERMEDIATE OBJECT WORD
PNWDSV	BSS  2	  	X2 REL WD LOC OF ARRAY CNT WD
PX2SV	BSS  2	  	X2 REL SEC LOC OF ARRAY CNT WD
PNXTIT	BSS  2	  	NEXT PUNCH BUFFER WORD
*
PHOLWD	EQU  $	  	TAILREAD - FIRST HOLVAR WORD
PDCONS	BSS  2	  	CURRENT DATA STATEMENT CONSTANT
PDSLBG	BSS  2	  	CURRENT DATA STATEMENT ITEM WORD
PDSLEN	BSS  2	  	LAST DATA STATEMENT ITEM WORD
*
PREADX	BSS  2	  	READWDS EXIT
PEVALX	BSS  2	  	EVALPTR EXIT
PGENXI	BSS  2	  	ADRL/BRANCH GENERATION EXIT
PIORTN	BSS  2	  	I/O ROUTINES EXIT
PGWDX2	BSS  2	  	NEW GETWORD ROUTINE EXIT
PGWDXI	BSS  2	  	GETWORD EXIT
*
PCHAIN	BSS  2	  	GCHAIN CHAIN TEMP
PRESOL	BSS  2	  	GCHAIN ITEM VALUE
*
FCHNGE	BSS  2	  	GET CHAIN BASE DEFINITION NOW
FDBBUG	BSS  2	  	DEBUG MODE
FDW  	BSS  2	  	WARNINGS TO BE PRINTED
FEND 	BSS  2	  	END CARD SCANNED
FIO  	BSS  2	  	PROGRAM DOES I/O
FLO  	BSS  2	  	LISTING REQUIRED
FMAP 	BSS  2	  	MAP ON LO, DO, OR NEITHER
FNOGEN	BSS  2	  	GEN DATA STMT LOAD ITEM
FDEBUG	BSS  2	  	GENERATE DEBUG CODE OR NOT
FLSTFL	BSS  2	  	LISTING FLAG
FPRTMA	BSS  2	  	PRINT MAP FLAG
FIEEE	BSS  2		IEEE ARITHMETIC FLAG (1=IEEE, 0=RADIX 100)
*
VAREA	BSS  2	  	CURRENT ARGS ALLOCATION AREA
VDELTA	BSS  2	  	ARRAY DELTA VALUE
VDISPL	BSS  2	  	CURRENT ARGS DISPL WITHIN AREA
VPTR 	BSS  2	  	CURRENT ARGUMENT POINTER
PADRAD	BSS  2	  	PTR TO CURRENT ARGS LAST REF ENTRY
*
VMAPW1	BSS  2	  	START OF MAP PACKET
VMAPW2	BSS  2
VHEADE	BSS  2
VVALUE	BSS  2
VNAME1	BSS  2	  	10 CHARACTER ASCII VARIABLE NAME
VNAME2	BSS  2
VNAME3	BSS  4
VNAME5	BSS  2
VBCDIT	EQU  $
	BSS  2
*
VCCONS	BSS  2	  	# OF INTEGER CONSTANTS (-)
VCLINE	BSS  2	  	NUMBER OF LINES THIS PAGE
VCURIT	BSS  2	  	CURRENT LOAD ITEM HEADER
VLOCN	BSS  2	  	LOGIC SEGMENT LOC COUNTER
VCMNSI	BSS  2	  	COMMON SIZE
VOBJLO	BSS  2	  	OBJECT LISTING LOC COUNTER
VORDER	BSS  2	  	CURRENT INSTRUCTION
VRECTY	BSS  2	  	OBJECT RECORD TYPE
VRMNOB	BSS  2	  	REMAINING WORDS IN PUNCH BUFFER
*
VCENTR	EQU  $	  	TAILREQD TABLE ENTRY COUNT
VCNSTS	BSS  2	  	WORD SIZE OF DATA STMT CONSTANT
VCIN 	EQU  $	  	TAILREAD X2 WORDS PER ENTRY COUNT
VDATLO	BSS  2	  	LOC OF NEXT UNRELOC LOAD INTO DATA
VCTOTA	EQU  $	  	LOC OF NEXT UNRELOC LOAD INTO DATA
VELMBY	BSS  2	  	BYTE SIZE OF DATA STA VARIABLE
VMINTB	EQU  $	  	TAIL READ FIXED SIZE TABLE COUNT
VMPXI1	EQU  $	  	MAP PRINTING EXIT SAVE
VRPTCN	BSS  2	  	# TIMES CAN REUSE DATA STATEMENT CONSTANT
VMPXI2	EQU  $	  	MAP PRINTING EXIT SAVE (LEVEL 2)
VBYTLF	BSS  2	  	# UNUSED BYTES IN DATA STATEMENT CONSTANT
VNOARG  BSS  2		NUMBER OF ARGS FOR GEN FUNCTIONS
*
VCOUN1	BSS  2	  	TEMPORARY
VTEMP	BSS  2	  	TEMPORARY STORAGE AREA
*
MAPX2L	EQU  $	  	MAP PRINTING 6-WD X2 PACKET SAVE
	BSS  12
*
NEWREC	BSS  4	  	NEWOBJ REGISTER SAVE AREA
*
	BSS  6
VPAD1	EQU  $-4	TAILRE FIRST PADDING WORD
VPAD2	EQU  $-2	TAILRE SECOND PADDING WORD
VPADWD	EQU  $	  	TAILREAD PADDING WORDS
*
VITMHD	BSS  2	  	DATA STMT LOAD ITEM HEADER
*
*  PEEPHOLE BARREL CONTROL:
*
ABARRE	BSS  2
*
MODFLG	BSS  2	  	MODADR CALL TO EVALUATE FLAG
*
* MISC SAVE CELLS
*
SAVER2	BSS  6		SAVE FOR GETADR ROUTINE
SAVER5	BSS  2	  	SAVE FOR GENERERATE ROUTINES
VSAVST	BSS  2	  	RETURN SAVE
VM39W1	BSS  10		MOD39 WORK AREA
SAVELN	BSS  2	  	SAVE FOR LINE NUMBER ROUTINE
SAVELB	BSS  2	  	SAVE FOR LABEL ROUTINE
CHECRE	BSS  2	  	SAVE FOR CHECK PAGE ROUTINE
*
*  FORTRAN4 - OPTIMIZATION TEMP BARREL
*
TMPBUF	BSS  64
*
KENDB	BSS  2	  	END BUFFER ADDRESS
SAVRTN	BSS  2
PPC  	BSS  10
PPEEPE	BSS  2
VSAVWR	BSS  2
*
*  ARGUMENT OFFSET OR TABLE TOP POINTERS:
*
PLCCTO 	BSS  2			   START OF LOCAL CONSTANTS
PGLDUM	BSS  2			   START OF GLOBAL DUMMIES (ARGUMENTS)
PATMPT	BSS  2			   START OF ADDRESS TEMPS
PCTMPT	BSS  2			   START OF CALCULATION TEMPS
PMODTO	BSS  2			 1 START OF FREE AREA
PLBLTO	BSS  2			 2 LABELS
PMLBLT	BSS  2			 3 MADE LABELS
PFXCTO	BSS  2			 4 FIXED CONSTANTS
PBYCTO	BSS  2			 5 BYTE CONSTANTS
PSPCNT	BSS  2			 6 SINGLE PRECISION CONSTANTS
PDPCNT	BSS  2			 7 DOUBLE PRECISION CONSTANTS
PI4CNT	BSS  2			 8 INTEGER *4 CONSTANTS
PC8CNT	BSS  2			 9 COMPLEX *8 CONSTANTS
PC6CNT	BSS  2			10 COMPLEX *16 CONSTANTS
PPGMTO	BSS  2			11 PROGRAMS
PLSPRT	BSS  2			12 LOCAL SUBPROGRAMS
PGSPRT	BSS  2			13 GO SUB PROGRAMS
PEXTRT	BSS  2			14 EXTERNALS
PSCLRT	BSS  2			15 SCALARS
PARRYT	BSS  2			16 ARRAYS
*
TBLTOP	EQU  $
*
PHVRTO	BSS  2
*
ADSTTO	BSS  2			START OF UNUSED TABLE SPACE
ADSTBT	BSS  2			END OF UNUSED TABLE SPACE
*
PLBLBT	EQU  PLBLTO+2    	PROGRAM LABEL TABLE BOTTOM
PFXCBT	EQU  PFXCTO+2    	INTEGER CONSTANT BOTTOM TABLE
PBYCBT	EQU  PBYCTO+2		BYTE CONSTANT BOTTOM TABLE
PSPCNB	EQU  PSPCNT+2    	SINGLE PREC CONSTANT TABLE BOTTOM
PDPCNB	EQU  PDPCNT+2    	DOUBLE PREC CONSTANT TABLE BOTTOM
PI4CNB	EQU  PI4CNT+2		INTEGER *4 CONSTANT BOTTOM PTR
PC8CNB	EQU  PC8CNT+2		COMPLEX *8 CONSTANT BOTTOM PTR
PC6CNB	EQU  PC8CNB+2		COMPLEX *16 CONSTANT BOTTOM PTR
PLSPRB	EQU  PLSPRT+2		LOCAL SPROGRAM TABLE BOTTOM PTR
PGSPRB	EQU  PGSPRT+2    	EXTERNAL SPROG TABLE BOTTOM PTR
PEXTRB	EQU  PEXTRT+2    	EXTERNAL LABEL TABLE BOTTOM PTR
PINTBT	EQU  PSCLRT+2    	FIXED SIZE TABLES BOTTOM PTR
*
	BSS  2	     		DATA AREA PTRS, MUST BE CONTINOUS
	BSS  2			TEMPORARY SAVE AREA
PATEMP	BSS  2
PCTEMP	BSS  2
PLCVAR	BSS  2
PHLVAR	BSS  2
PDCTMP	BSS  2
VDATSI	BSS  2			END OF DATA + 1 (ALSO DATA AREA SZ)
ENDL3	EQU  $
	ENDIF
	UNL
*
*  INTERPRETER DATA AREA (FORTRAN2, FORTRAN5 ONLY)
*
	IFNE PASS1-3
	LIST
BASE	EQU  $
*
*  STACK ANCHORS
*
RA	BSS  8			STACK ANCHORS
RAINPU	BSS  2			INPUT STACK (START FREE AREA -2)
	BSS  RBUFFE-RINPUT-2
RABUFF	BSS  ROLLS-RBUFFE
RF	EQU  RA+2		STACK FLOORS
RFINPU	EQU  RAINPU+2
RFBUFF	EQU  RABUFF+2
RFLAST  BSS  2			BASE-2
*
*  STACK TOPS
*
RT	EQU  $			STACK TOPS
	BSS  8
RTINPU	BSS  RBUFFE-RINPUT
RTBUFF	BSS  RCODE-RBUFFE
RTCODE	BSS  ROLLS-RCODE
*
*  STACK BOTTOMS
*
RB	EQU  $			STACK BOTTOMS
	BSS  8
RBINPU	BSS  RBUFFE-RINPUT
RBBUFF	BSS  RCODE-RBUFFE
RBCODE	BSS  RTEMP-RCODE
RBTEMP	BSS  REXIT-RTEMP
RBEXIT	BSS  RWORK-REXIT
RBWORK	BSS  RPOLIS-RWORK
RBPOLS	BSS  ROLLS-RPOLIS
*
RALSP1	EQU  RFLAST
RTLSP1	EQU  RB
RBLSP1	EQU  $
	ENDIF
*
*  INTERPRETER CALLED SUBROUTINES
*
*  FOR PASS2, DEFINE ALL ROUTINE ADDRESSES AS NULL, SINCE THEY ARE
*	      JUST HERE TO DEFINE THE OFFSET JUMPS TO THE ROUTINES.
*
*  FOR FORTRAN2:
*
	UNL
	IFEQ PASS1
	LIST
AHEXSC	BSS  2			SCAN A HEX CONSTANT ROUTINE
AEXFAL	BSS  2			EXIT FALSE ROUTINE
AEXIT 	BSS  2			EXIT (SUBR RETURN) ROUTINE
AFAIL 	BSS  2			EXIT FAIL SCAN ROUTINE
AGENCO	BSS  2			GEN CONSTANT ROUTINE
AINTER	BSS  2			INTERPRETE START ROUTINE
ALDGRP	BSS  2			LOAD GROUP ROUTINE
ANXSTM	BSS  2			GET NEXT STATEMENT ROUTINE
ANXTCH	BSS  2			GET NEXT CHAR ROUTINE
APUNCH	BSS  2			PUNCH SCR 2 ROUTINE
AP2INI	BSS  2			PART 2 INIT ROUTINE
ASTATU	BSS  2			STATEMENT SCAN START ROUTINE
ASYMSC	BSS  2			SYMBOL SCAN ROUTINE
ATAILS	BSS  2			TAILS START ROUTINE
A1STLT	BSS  2			GET 1ST LETTER OF SYMBOL ROUTINE
ADRIVE	BSS  2			DRIVING TABLE EXECUTE ROUTINE
AOPTSA	BSS  2			SET OPTION ROUTINE
AOVERF	BSS  2			GENERATE OVERFLOW ERROR ROUTINE
AOCTSC  BSS  2			OCTAL SCAN
ABINSC  BSS  2			BINARY SCAN
	ENDIF
*
*  VARIAB:  Variable DATA Area for Psuedo OP Instruction Set.
*
	LIST
	IFEQ PASS1
	DORG >0200
	ENDIF
*
	UNL
	IFNE PASS1-3
	LIST
VARIAB	EQU  $
*
*  FLAG VARIABLES
*
FCLABE	BSS  2		DCT COMPLETION REQUIRES LABELS
FACTIO	BSS  2		DCT TABLE ACTION BEING SCANNED
FACTIV	BSS  2		ACTIVE STATEMENT ENCOUNTERED
FARG	BSS  2		EXPR IS SPROG ARG
FBLANK	BSS  2		SCAN CHARACTERS INCLUDING BLANKS
FDCT	BSS  2		PROGRAM USES DCT'S
FDCTAR	BSS  2		DCT ARG HAS BEEN GENERATED
FEND	BSS  2		END-CARD HAS BEEN ENCOUNTERED
FSINGL	BSS  2		SINGLE-PRECISION CONSTANT BEING GEN'D
FIFARG	BSS  2		STMT IS INVALID AS LOGICAL IF ARG
FIO	BSS  2		PROGRAM DOES I/O
FINDRC	BSS  2		INDIRECT VARSPEC BEING PROCESSED
FJUMP	BSS  2		STMT IS INVALID AS EXECUTE TARGET
FLONGN	BSS  2		NAME IN STMT IS LONGER THAN 9 CHARACTERS
FMINUS	BSS  2		CONSTANT WAS PRECEDED BY "-"
FMXMOD	BSS  2		EXPRESSION CONTAINED MIXED MODE MATH
FNTSPE	BSS  2		NON-SPECIFICATION STMT ENCOUNTERED
FSPROG	BSS  2		SUBPROGRAM BEING COMPILED
F1STPG	BSS  2		FIRST PROGRAM OF COMPILATION
FINCL	BSS  2		1 IF READING INCLUDE FILE
FMAPCT	BSS  2		MAP PRINT CONTROL FLAG
FX1	BSS  2		UNUSED
FUNCLS	BSS  2		UNCLOSED 'IF' BLOCK FLAG
FPRGEN	BSS  2		END OF PRG/SUBR/FUNCT FLAG
FSAVEO	BSS  2		FILE ON INCLUDE NAME
FINOUT	BSS  2		INPUT (0) OR OUTPUT(2) FLAG
*
*  POINTER VARIABLES
*
PCURCH	BSS  2		CURRENT SCAN POSITION
PLSTCH	BSS  2		LAST SCAN POSTION
PRECCH	BSS  2		MAX SCAN POSITION THIS RECORD
PERRCH	BSS  2		SCAN POSITION OF ERROR
PERRMS 	BSS  2		LOCATION OF APPROPRIATE ERROR MESSAGE
PSTALB	BSS  2		STATEMENT LABEL
*
*  TEMP VARIABLES
*
VCURCH	BSS  2		CURRENT SCAN CHARACTER
VLSTCH	BSS  2		LAST SCAN CHARACTER
VGENID	BSS  2		AGENCO CELL OF "LAST-LAST" CHARACTER
*
VCTMPS	BSS  2		COUNT OF #TEMPS REQUIRED THIS STMT
VITMPS	BSS  2		COUNT OF #TEMPS RESERVED
VMTMPS	BSS  2		MAX COUNT OF #TEMPS REQ'D THIS PROGRAM
VCATMP	BSS  2		COUNT OF ADDRESS TEMPS THIS STMT
VIATMP	BSS  2		COUNT OF ADDRESS TEMPS RESERVED
VMATMP	BSS  2		MAX COUNT OF ADDRESS TEMPS
VCMLBL	BSS  2		COUNT OF MADE LABELS
*
VCDIME	BSS  2		NUMBER OF DIMENSIONS OF ARRAY
VCSCAN	BSS  2		COUNT OF DIGITS SCANNED BY DIGITSCN
VCUSED 	BSS  2		COUNT OF DIGITS USED BY DIGITSCN
VARGCN	BSS  2		COUNT OF SUBROUTINE ARGUMENTS
VCRNTO	BSS  2		CURRENT OPERATOR OF EXPRESSION
VCSIZE	BSS  2		SIZE OF BLANK COMMON
VDSIZE	BSS  2		SIZE OF LOCAL DATA AREA
VELEMS	BSS  2		STORAGE SIZE OF CURRENT EXPRESSION ELEMENT
VSELEM	BSS  2		SIZE OF A SINGLE STORAGE ELEMENT (FOR SDATA)
VARRSI	BSS  2		TOTAL ARRAY SIZE OF A STORAGE ELEMENT (FOR SDATA)
VEND	BSS  2		'END=' IO PARAMETER
VERR	BSS  2		'ERR=' IO PARAMETER
VINDIR	BSS  2		'IND' POP ARGUMENT
VINSTR	BSS  2		BUILD INSTRUCTION BY MODE (BIM)  INSTRUCTION COUNT
VKEYCN	BSS  2		KEYWORD COUNT
VKEYWD	BSS  2		KEYWORD BUILD
VLBLKE	BSS  2		LABEL TYPE
VMAXSC	BSS  2		MAXIMUM SUBSCRIPT VALUE OF ARRAY
VMAXEQ	BSS  2		MAX LOCATION EQUIV'D INTO
VMINEQ	BSS  2		MIN LOCATION EQUIV'D INTO
VOFFSE	BSS  2
VORD	BSS  2		'ORD=' IO PARAMETER
VREC	BSS  2		'REC=" IO PARAMETER
VSTATU	BSS  2		'STATUS=' OR 'IOSTAT=' PARAMETER
VTICTO	BSS  2		L/R CHARACTER BYTE FLAG
VVARCN	BSS  2		NUMBER OF VARIABLE ARRAY SUBSCRIPTS
VCLASS	BSS  2		SYSTEM POINT'S	DATA TYPE TAG
VINTDR	BSS  2		INTRINSIC DRIVER (FUNCT,TAG,ARG CNT)
VINOPL	BSS  2		LABEL ON INCLUDE STATEMENT
VDOLOO	BSS  2		LABEL FROM RDO OR 0 IF RDO EMPTY
VARGSA  BSS  2		ARGUMENT NUMBER SAVE (FOR INTRINSIC)
VPAB	BSS  8		PAB FOR INCLUDE
VFLENT	BSS  2		FILE NAME LENGTH FOR INCLUDE
VFDES0	BSS  2		UP TO 32 CHAR FILE DESCRIPTOR
VFDES1	BSS  2		 CHARS 3,4
VFDES2	BSS  2		 CHARS 5,6
VFDES3	BSS  2		 CHARS 7,8
VFDES4	BSS  2		 CHARS 9,10
VFDES5	BSS  2		 CHARS 11,12
VFDES6	BSS  2		 CHARS 13,14
VFDES7	BSS  2		 CHARS 15,16
VFDES8	BSS  2		 CHARS 17,18
VFDES9	BSS  2		 CHARS 19,20
VFDESA	BSS  2		 CHARS 21,22
VFDESB	BSS  2		 CHARS 23,24
VFDESC	BSS  2		 CHARS 25,26
VFDESD	BSS  2		 CHARS 27,28
VFDESE	BSS  2		 CHARS 29,30
VFDESF	BSS  2		 CHARS 31,32
*
CENTRA	EQU  $
*
VSYM1 	BSS  2		MOD39 SYMBOL
VSYM2 	BSS  2
VSYM3 	BSS  2
*
VDATA1	BSS  2		FAC FOR STACK
VDATA2	BSS  2
VDATA3	BSS  2
VDATA4	BSS  2
VDATA5  BSS  2		(USED FOR ALLOCATION DATA SIZE TEMP)
VDATA6	BSS  2
VDATA7	BSS  2
VDATA8	BSS  2
*
MPAC	BSS  2		MULTIPLE PRECISION ACCUMULATOR
MPACP1	BSS  4
*
VTEMP1	BSS  2
VTEMP2	BSS  2
VTEMP3	BSS  2
VTEMP4	BSS  2
*
VPROGN	BSS  6
*
ZERDTS	EQU  FACTIO-CENTRA
*
FOPT	EQU  $
FBATCH	BSS  2			BA OPTION (unused)
FSC 	BSS  2			SC OPTION
FMAP	BSS  2			DM OPTION (unused)
FNW 	BSS  2			NW OPTION (unused)
FOBJLS 	BSS  2			OB OPTION
FIEEE	BSS  2			IE OPTION (IEEE Arithmetic)
FDMODE	BSS  2			DM OPTION (DEBUG STATEMENTS INCLUDED)
FNC	BSS  2			NC OPTION (unused)
FNS 	BSS  2			NS OPTION (unused)
FOPTIO	EQU  $
ENDL1	EQU  $			END OF FORTRAN1 DYNAMIC DATA AREA
	ENDIF
	LIST
*
	IFNE PASS1
	RORG PREAOR		RESET RELATIVE ORG POINTER
	ENDIF
*
*  MISCELLANEOUS VARIABLES:
*
*
	UNL
	IFEQ PASS1-1
	LIST
EXPNAM	EQU  $-2		EXPONENTIATION-ROUTINE NAMES
	DATA >6DD5	II$	 00	I*2 TO I*2
	DATA >79B7	KI$	 01	I*2 TO I*1
	DATA >73C6	JI$	 02	I*2 TO I*4
	DATA >A34E	RI$	 03	I*2 TO R*4
	DATA >5020	DI$	 04	I*2 TO R*8
	DATA >4A2F	CI$	 05	I*2 TO C*8
	DATA >5611	EI$	 06	I*2 TO C*16
	DATA >DB84	LI$	 07	I*2 TO L*2
	DATA >DB84		 08     FUTURE
	DATA >DB84		 09	FUTURE
	DATA >DB84		 0A	FUTURE
	DATA >DB84		 0B	FUTURE
	DATA >DB84		 0C	FUTURE
	DATA >DB84		 0D	FUTURE
	DATA >DB84		 0E	FUTURE
	DATA >DB84		 0F	FUTURE
*
	DATA >6E23	IK$	 10	I*1 TO I*2
	DATA >7A05	KK$	 11	I*1 TO I*1
	DATA >7414      JK$	 12	I*1 TO I*4
	DATA >A39C	RK$	 13	I*1 TO R*4
	DATA >506E	DK$	 14	I*1 TO R*8
	DATA >4A7D	CK$	 15	I*1 TO C*8
	DATA >565F	EK$	 16	I*1 TO C*16
	DATA >DB84	LK$	 17	I*1 TO L*2
	DATA >DB84		 18     FUTURE
	DATA >DB84		 19	FUTURE
	DATA >DB84		 1A	FUTURE
	DATA >DB84		 1B	FUTURE
	DATA >DB84		 1C	FUTURE
	DATA >DB84		 1D	FUTURE
	DATA >DB84		 1E	FUTURE
	DATA >DB84		 1F	FUTURE
*
	DATA >6DFC	IJ$	 20	I*4 TO I*1
	DATA >79DE	KJ$	 21	I*4 TO I*2
	DATA >73ED	JJ$	 22	I*4 TO I*4
	DATA >A375	RJ$	 23	I*4 TO R*4
	DATA >5047	DJ$	 24	I*4 TO R*8
	DATA >4A56	CJ$	 25	I*4 TO C*8
	DATA >5638	EJ$	 26	I*4 TO C*16
	DATA >DB84	LJ$	 27	I*4 TO L*2
	DATA >DB84		 28     FUTURE
	DATA >DB84		 29	FUTURE
	DATA >DB84		 2A	FUTURE
	DATA >DB84		 2B	FUTURE
	DATA >DB84		 2C	FUTURE
	DATA >DB84		 2D	FUTURE
	DATA >DB84		 2E	FUTURE
	DATA >DB84		 2F	FUTURE
*
	DATA >6F34	IR$	 30	R*4 TO I*1
	DATA >7B16	KR$	 31	R*4 TO I*2
	DATA >7525	JR$	 32	R*4 TO I*4
	DATA >A4AD	RR$	 33	R*4 TO R*4
	DATA >517F	DR$	 34	R*4 TO R*8
	DATA >4B8E	CR$	 35	R*4 TO C*8
	DATA >5770	ER$	 36	R*4 TO C*16
	DATA >DB84	LR$	 37	R*4 TO L*2
	DATA >DB84		 38     FUTURE
	DATA >DB84		 39	FUTURE
	DATA >DB84		 3A	FUTURE
	DATA >DB84		 3B	FUTURE
	DATA >DB84		 3C	FUTURE
	DATA >DB84		 3D	FUTURE
	DATA >DB84		 3E	FUTURE
	DATA >DB84		 3F	FUTURE
*
	DATA >6D12	ID$	 40	R*8 TO I*1
	DATA >78F4	KD$	 41	R*8 TO I*2
	DATA >7303	JD$	 42	R*8 TO I*4
	DATA >A28B	RD$	 43	R*8 TO R*4
	DATA >4F5D	DD$	 44	R*8 TO R*8
	DATA >496C	CD$	 45	R*8 TO C*8
	DATA >554E	ED$	 46	R*8 TO C*16
	DATA >DB84	LD$	 47	R*8 TO L*2
	DATA >DB84		 48     FUTURE
	DATA >DB84		 49	FUTURE
	DATA >DB84		 4A	FUTURE
	DATA >DB84		 4B	FUTURE
	DATA >DB84		 4C	FUTURE
	DATA >DB84		 4D	FUTURE
	DATA >DB84		 4E	FUTURE
	DATA >DB84		 4F	FUTURE
*
	DATA >6CEB	IC$	 50	C*8 TO I*1
	DATA >78CD	KC$	 51	C*8 TO I*2
	DATA >72DC	JC$	 52	C*8 TO I*4
	DATA >A264	RC$	 53	C*8 TO R*4
	DATA >4F36	DC$	 54	C*8 TO R*8
	DATA >4945	CC$	 55	C*8 TO C*8
	DATA >5527	EC$	 56	C*8 TO C*16
	DATA >DB84	LC$	 57	C*8 TO L*2
	DATA >DB84		 58     FUTURE
	DATA >DB84		 59	FUTURE
	DATA >DB84		 5A	FUTURE
	DATA >DB84		 5B	FUTURE
	DATA >DB84		 5C	FUTURE
	DATA >DB84		 5D	FUTURE
	DATA >DB84		 5E	FUTURE
	DATA >DB84		 5F	FUTURE
*
	DATA >6D39	IE$	 60	C*16 TO I*1
	DATA >791B	KE$	 61	C*16 TO I*2
	DATA >732A	JE$	 62	C*16 TO I*4
	DATA >A2B2	RE$	 63	C*16 TO R*4
	DATA >4F84	DE$	 64	C*16 TO R*8
	DATA >4993	CE$	 65	C*16 TO C*8
	DATA >5575	EE$	 66	C*16 TO C*16
	DATA >DB84	LE$	 67	C*16 TO L*2
	DATA >DB84		 68     FUTURE
	DATA >DB84		 69	FUTURE
	DATA >DB84		 6A	FUTURE
	DATA >DB84		 6B	FUTURE
	DATA >DB84		 6C	FUTURE
	DATA >DB84		 6D	FUTURE
	DATA >DB84		 6E	FUTURE
	DATA >DB84		 6F	FUTURE
*
*
OPTION	EQU  $-2		COMPILE NAME OPTIONS
	DATA >4F0E		DEBUG  (FDB)
	DATA >A854		SC     (FSC)
	DATA >FFFF		UNUSED (FDM)
	DATA >FFFF		UNUSED (FNW)
	DATA >9069		OB     (FLO)
	DATA >FFFF		UNUSED (FNR)
	DATA >50BB		DM     (FXM)
	DATA >FFFF		UNUSED (FNC)
	DATA >FFFF		UNUSED (FNS)
OPTSEN	EQU  $-2
*
* INTRINSIC FUNCTIONS.  Those items marked with an asterick (*) were
*		        added in version 3.0.
*	Equates:
*
CALLSU	EQU  RACCUM/2+17	>36 Since CALL is 17th entry in DRIVEX table
CVNSU	EQU  CALLSU+1		>37 CVN
CVESU	EQU  CVNSU+1		>38
IANDSU	EQU  CVESU+1		>39
IIORSU	EQU  IANDSU+1		>3A
IEORSU	EQU  IIORSU+1		>3B
INOTSU	EQU  IEORSU+1		>3C
IABSSU	EQU  INOTSU+1		>3D
JABSSU	EQU  IABSSU+1		>3E
*
*  Macro used to define intrinsic function table
*
INTRN	MACRO
	DATA %1*8+%2*128+%3
	DATA %4*8+%5*128+%6
	ENDM


*	     m39 name    +-> 6/Opcode, 3/Type, 7/#min args
*	     +-----+     |      +-> 6/CVN,CVE; 3/Type, 7/addt # args
*	     |     |     |      |
INTRIN	EQU  $-2
	DATA >3D33,>DB84		  1 * ABS
	INTRN IABSSU,R,1,CVESU,R,0

	DATA >3E3E,>3DFE		  2 AIMAG
	INTRN CALLSU,R,1,CVESU,C,0

	DATA >3D56,>A917		  3 ACOSH
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3D56,>ABFC		  4 ACOS
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3E3F,>B1ED		  4 AINT
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3EAD,>3ECE		  5 ALGAMA
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3EB5,>5F37		  6 ALOG10
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3EB5,>5F82		  7 ALOG2
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3EB5,>64B0		  8 ALOG
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3ECE,>C435		  9 AMAX0
	INTRN CALLSU,R,2,CVESU,I,8

	DATA >3ECE,>C45C		 10 AMAX1
	INTRN CALLSU,R,2,CVESU,R,8

	DATA >3ED6,>88CB		 11 AMIN0
	INTRN CALLSU,R,2,CVESU,I,8

	DATA >3ED6,>88F2		 12 AMIN1
	INTRN CALLSU,R,2,CVESU,R,8

	DATA >3EDC,>52DD		 13 AMOD
	INTRN CALLSU,R,2,CVESU,R,0

	DATA >3F93,>9300		 14 ARCOS
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3FA3,>6E97		 15 ARSIN
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3FC0,>8E47		 16 ASIN
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3FC0,>8B62		 16 ASINH
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3FDF,>8919		 18 ATAN2
	INTRN CALLSU,R,2,CVESU,R,0

	DATA >3FDF,>8B62		 17 ATANH
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >3FDF,>8E47		 19 ATAN
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >48DD,>ABFC		 20 CABS
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >48DE,>92ED		 21 CACOSH
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >48ED,>4B10		 22 CARCOS
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >48ED,>A931		 23 CARSIN
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >48EE,>6E84		 24 CASINH
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >48EF,>3EFC		 25 CATANH
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >48EF,>3F0F		 26 CATAN
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4938,>A917		 27 CCOSH
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4938,>ABFC		 28 CCOS
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4951,>45C3		 29 CDABS
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4951,>4B10		 30 CDACOS
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4951,>4BA1		 31 CDACSH
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4951,>A931		 32 CDASIN
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4951,>A9EE		 33 CDASNH
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4951,>ADEA		 34 CDATAN
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4951,>AFDF		 35 CDATNH
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4953,>92ED		 36 CDCOSH
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4953,>9300		 37 CDCOS
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4955,>C804		 38 CDEXP
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >495C,>912C		 39 CDLOG
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4963,>6E84		 40 CDSINH
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4963,>6E97		 41 CDSIN
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4963,>9EB4		 42 CDSQRT
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4964,>3EFC		 43 CDTANH
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4964,>3F0F		 44 CDTAN
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >498F,>9A29		 45 CEXP
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4A97,>64B0		 46 CLOG
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4ABF,>81F0		 48 CMPLX
	INTRN CALLSU,C,2,CVESU,R,0

	DATA >4B0B,>7377		 49 CONJG
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4B10,>6AA1		 50 COSH
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >4B10,>DB84		 51 COS
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >4B11,>3F0F		 52 COTAN
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >4BA2,>8B62		 53 CSINH
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4BA2,>8E47		 54 CSIN
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4BAA,>A4FA		 55 CSQRT
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4BC1,>8B62		 56 CTANH
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4BC1,>8E47		 47 CTAN
	INTRN CALLSU,C,1,CVESU,C,0

	DATA >4ECE,>ABFC		 57 DABS
	INTRN IABSSU,D,1,CVESU,D,0

	DATA >4ECF,>92ED		 58 DACOSH
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4ECF,>9300		 58 DACOS
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EDE,>4B10		 59 DARCOS
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EDE,>A931		 60 DARSIN
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EDF,>6E84		 61 DASINH
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EDF,>6E97		 61 DASIN
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EE0,>3EED		 62 DATAN2
	INTRN CALLSU,D,2,CVESU,D,0

	DATA >4EE0,>3EFC		 63 DATANH
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EE0,>3F0F		 64 DATAN
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4EFF,>58CE		 65 * DBLE
	INTRN CVNSU,D,1,CVNSU,D,0

	DATA >4F27,>97DD		 66 DCMPLX
	INTRN CALLSU,E,2,CVESU,D,0

	DATA >4F29,>8B9C		 67 DCONJG
	INTRN CALLSU,E,1,CVESU,E,0

	DATA >4F29,>A917		 68 DCOSH
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F29,>ABFC		 69 DCOS
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F29,>ADEA		 70 DCOTAN
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F4A,>8856		 71 DDIM
	INTRN CALLSU,D,2,CVESU,D,0

	DATA >4F7A,>5B17		 72 DERFC
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F7A,>5EBF		 73 DERF
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F80,>94B0		 74 DEXP10
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F80,>94FB		 75 DEXP2
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F80,>9A29		 76 DEXP
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >4F9B,>903B		 77 * DFLOAT
	INTRN CVNSU,D,1,CVNSU,D,0

	DATA >4FB7,>861A		 78 DGAMMA
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >5011,>3DFE		 79 DIMAG
	INTRN CALLSU,D,1,CVESU,E,0

	DATA >5011,>DB84		 80 DIM
	INTRN CALLSU,R,2,CVESU,R,0

	DATA >5012,>B1ED		 81 DINT
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >5080,>3ECE		 82 DLGAMA
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >5088,>5F37		 83 DLOG10
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >5088,>5F82		 84 DLOG2
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >5088,>64B0		 85 DLOG
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >50A1,>C45C		 86 DMAX1
	INTRN CALLSU,D,2,CVESU,D,8

	DATA >50A9,>88F2		 87 DMIN1
	INTRN CALLSU,D,2,CVESU,D,8

	DATA >50AF,>52DD		 88 DMOD
	INTRN CALLSU,D,2,CVESU,D,0

	DATA >5168,>3EC1		 89 * DREAL
	INTRN CVNSU,D,1,CVNSU,E,0

	DATA >5193,>52B5		 90 DSIGN
	INTRN CALLSU,D,2,CVESU,D,0

	DATA >5193,>8B62		 91 DSINH
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >5193,>8E47		 92 DSIN
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >519B,>A4FA		 93 DSQRT
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >51B2,>8B62		 94 DTANH
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >51B2,>8E47		 95 DTAN
	INTRN CALLSU,D,1,CVESU,D,0

	DATA >575A,>4CEC		 96 ERFC
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >575A,>DB84		 97 ERF
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >584E,>0615		 98 EXP10
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >584E,>1182		 99 EXP2
	INTRN CALLSU,R,1,CVESU,R,0

INTRNE	EQU  $-2
*
*  EXTENSION OF INTRINSIC TABLE (SPLIT CAUSE IT GOT TOO LARGE):
*
INTRI1	EQU  $-2
	DATA >584E,>DB84		100 EXP
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >5C6A,>3FF9		101 * FLOAT
	INTRN CVNSU,R,1,CVNSU,R,0

	DATA >60AC,>8460		102 GAMMA
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >6C83,>ABFC		103 IABS
	INTRN IABSSU,I,1,CVESU,I,0

	DATA >6C8F,>52DD		104 IAND
	INTRN IANDSU,I,2,CVESU,I,0

	DATA >6CFF,>8856		105 IDIM
	INTRN CALLSU,I,2,CVESU,I,0

	DATA >6CFF,>8D36		106 * IDINT
	INTRN CVNSU,R,1,CVNSU,I,0

	DATA >6D2C,>A60B		107 * IEOR
	INTRN IEORSU,I,2,CVESU,I,0

	DATA >6D4D,>C9B1		108 * IFIX
	INTRN CVNSU,I,1,CVNSU,I,0

	DATA >6DBA,>45C3		109 * IIABS
	INTRN IABSSU,I,1,CVESU,I,0

	DATA >6DBD,>6E90		110 * IIDINT
	INTRN CVNSU,R,1,CVESU,I,0

	DATA >6DC7,>B1ED		111 * IINT
	INTRN CVNSU,I,1,CVNSU,I,0

	DATA >6E90,>DB84		112 * INT
	INTRN CVNSU,I,1,CVNSU,I,0

	DATA >6EB5,>DB84		113 * IOR
	INTRN IIORSU,I,2,CVESU,I,0

	DATA >6F19,>8AC6		114 IRAND
	INTRN CALLSU,I,1,CVESU,I,0

	DATA >6F47,>5DAE		115 ISHFT
	INTRN CALLSU,I,2,CVESU,I,0

	DATA >6F48,>62B5		116 ISIGN
	INTRN CALLSU,I,2,CVESU,I,0

	DATA >73AB,>45C3		117 * JIABS
	INTRN JABSSU,J,1,CVESU,J,0

	DATA >73AB,>8AC6		118 * JIAND
	INTRN IANDSU,J,2,CVESU,J,0

	DATA >73AE,>6E90		119 * JIDINT
	INTRN CVESU,J,1,CVESU,D,0

	DATA >73AF,>92D9		120 * JIEOR
	INTRN IEORSU,J,2,CVESU,J,0

	DATA >73B8,>B1ED		121 * JINT
	INTRN CVESU,J,1,CVESU,I,0

	DATA >73B9,>A60B		122 * JIOR
	INTRN IIORSU,J,2,CVESU,J,0

	DATA >73BD,>6767		123 * JISHFT
	INTRN CALLSU,J,2,CVESU,J,0

	DATA >799C,>45C3		124 * KIABS
	INTRN IABSSU,K,1,CVESU,K,0

	DATA >799C,>8AC6		125 * KIAND
	INTRN IANDSU,K,2,CVESU,K,0

	DATA >79A0,>92D9		126 * KIEOR
	INTRN IEORSU,K,2,CVESU,K,0

	DATA >79AA,>A60B		127 * KIOR
	INTRN IIORSU,K,2,CVESU,K,0

	DATA >845D,>05A0		128 MAX0
	INTRN CALLSU,I,2,CVESU,I,8

	DATA >845D,>0B91		129 MAX1
	INTRN CALLSU,I,2,CVESU,R,8

	DATA >845D,>DB84		130 MAX (SAME AS MAX0)
	INTRN CALLSU,I,2,CVESU,I,8

	DATA >858B,>05A0		131 MIN0
	INTRN CALLSU,I,2,CVESU,I,8

	DATA >858B,>0B91		132 MIN1
	INTRN CALLSU,I,2,CVESU,R,8

	DATA >858B,>DB84		133 MIN (SAME AS MIN0)
	INTRN CALLSU,I,2,CVESU,I,8

	DATA >866B,>DB84		134 MOD
	INTRN CALLSU,I,2,CVESU,I,0

	DATA >8C6C,>DB84		135 NOT
	INTRN INOTSU,I,1,CVESU,I,0

	DATA >96B9,>79B6		136 PEEKI (SAME AS PEEK)
	INTRN CALLSU,I,1,CVESU,I,0

	DATA >96B9,>79DD		137 PEEKJ (INTEGER *4 VERSION)
	INTRN CALLSU,J,1,CVESU,I,0

	DATA >96B9,>7A04		138 PEEKK (INTEGER *2 VERSION)
	INTRN CALLSU,K,1,CVESU,I,0

	DATA >96B9,>7B9F		139 PEEKVI (SAME AS PEEKV)
	INTRN CALLSU,I,1,CVESU,I,0

	DATA >96B9,>7BA0		140 PEEKVJ (INTEGER *4 VERSION)
	INTRN CALLSU,J,1,CVESU,I,0

	DATA >96B9,>7BA1		141 PEEKVK (INTEGER *1 VERSION)
	INTRN CALLSU,K,1,CVESU,I,0

	DATA >96B9,>7BB1		142 PEEKV
	INTRN CALLSU,I,1,CVESU,I,0

	DATA >96B9,>7C74		143 PEEK
	INTRN CALLSU,I,1,CVESU,I,0

	DATA >A297,>8265		144 * REAL
	INTRN CVNSU,R,1,CVNSU,C,0

	DATA >A92A,>8E47		145 SIGN
	INTRN CALLSU,R,2,CVESU,R,0

	DATA >A931,>CAA1		146 SINH
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >A931,>DB84		147 SIN
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >A9ED,>8265		148 * SNGL
	INTRN CVNSU,R,1,CVNSU,R,0

	DATA >AA6D,>B1ED		149 SQRT
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >ADEA,>6AA1		150 TANH
	INTRN CALLSU,R,1,CVESU,R,0

	DATA >ADEA,>DB84		151 TAN
	INTRN CALLSU,R,1,CVESU,R,0
INTRE1	EQU  $-2
	ENDIF
*
* INLINE INTRINSIC FUNCTION OP FIELDS
*
	UNL
	IFLT PASS1-2		FORTRAN1 AND FORTRAN2
	LIST
CALL 	EQU  RACCUM+34		DSPROG OP FIELD
CVN  	EQU  CALL+2
CVE  	EQU  CVN+2
IAND 	EQU  CVE+2
IIOR 	EQU  IAND+2
IEOR 	EQU  IIOR+2
INOT 	EQU  IEOR+2
*
* INSTRUCTIONS WITH ARGUMENT BUT NO COUNT
*
CB   	EQU  0		00 B
CBAN 	EQU  CB+2	01 JLT
CBAZ 	EQU  CBAN+2	02 JEQ
CIM  	EQU  CBAZ+2	03 INC
CAND 	EQU  CIM+2	04 AND
CADD 	EQU  CAND+2	05 ADD
CLOAD	EQU  CADD+2	06 LOAD
CSTORE	EQU  CLOAD+2	07 STORE
CCOMPA	EQU  CSTORE+2	08 COMPARE
CDIV 	EQU  CCOMPA+2	09 DIVIDE
CMULT	EQU  CDIV+2	0A MULTIPLY
CSUB 	EQU  CMULT+2	0B SUBTRACT
CSCLRI	EQU  CSUB+2	0C SCALAR I/O
CARRYI	EQU  CSCLRI+2	0D ARRAY I/O
CADJDI	EQU  CARRYI+2	0E ADJUSTABLE I/O
CAOR 	EQU  CADJDI+2	0F OR
CAEOR	EQU  CAOR+2	10 EXCLUSIVE OR
CSUBCH	EQU  CAEOR+2	11 SUBTRACT CHECK
CADSCH	EQU  CSUBCH+2	12 ADD CHECK
CLE  	EQU  CADSCH+2	13 LESS THAN/EQUAL TO
CLT  	EQU  CLE+2	14 LESS THAN
CGE  	EQU  CLT+2	15 GREATER THAN/EQUAL TO
CGT  	EQU  CGE+2	16 GREATER THAN
CNE  	EQU  CGT+2	17 NOT EQUAL
CLABEL	EQU  CNE+2	18 LABEL
CBOSX	EQU  CLABEL+2	19 BEGINNING OF STATEMENT
CFUNCE	EQU  CBOSX+2	21 FUNCTION CALL
COR  	EQU  CFUNCE+2	22 OR
CFORMA	EQU  COR+2	23 FORMAT STATEMENT
CINCR2	EQU  CFORMA+2	24 INCR BY 2
CDECR	EQU  CINCR2+2	26 DECR
CDECR2	EQU  CDECR+2	27 DECR BY 2
CCLEAR	EQU  CDECR2+2	28 CLEAR R5
CSETO	EQU  CCLEAR+2	29 SETO R5
CMUL16	EQU  CSETO+2	30 *16
CMUL32	EQU  CMUL16+2	31 *32
CMUL64	EQU  CMUL32+2	32 *64
CMUL12	EQU  CMUL64+2	33 *128
CMUL25	EQU  CMUL12+2	34 *256
*
CBOS 	EQU  >1900
*
* Instructions with argument and word count
*
CCALL	EQU  >A0	50 SUBROUTINE CALL
CFUNCT	EQU  CCALL+2	51 INLINE FUNCTION
CCGTEX	EQU  CFUNCT+2	52 COMPUTED GOTO
*
CADRL	EQU  CCGTEX+2	53 GEN ADDRESS LITERAL
CDATA	EQU  CADRL+2	54 ABSOLUTE DATA
CDATST	EQU  CDATA+2	55 DATA STATEMENT START
CDELTA	EQU  CDATST+2	56 ARRAY DELTA VALUE FOLLOWS
CISHFT	EQU  >005E	5E ISHFT(i,j)
*
COUNT	EQU  >6000
	ENDIF
*
*  POP ADDRESSABLE AREA
*
	LIST
	IFEQ PASS1
	DORG 0
	ENDIF
*
*  FORTRAN1 AND FORTRAN2:
*
	UNL
	IFLT PASS1-3
	LIST
*
*  A MACRO TO BUILD AN OPFIELD.  PASSED A ROLL NUMBER (TIMES 2) AND
*  A TAG FIELD (PROBABLY INTEGER)
*
BLDOPF	MACRO
	DATA %1/2+%2*1024+%3
	ENDM
*
BLDCMF	MACRO
	DATA %1*512
	ENDM
*
DAT	EQU  $			CONSTANTS:
*
KFALSE	EQU  $
KPLUS	EQU  $
TGOTO	EQU  $
DTERM	EQU  $			START OF TERM MARKER
DEOTER	EQU  $			END OF TERM MARKER
PBASE	EQU  $			PROGRAM BASE
IHOLVA	EQU  $			HOLLERITH VARIABLE
KZERO	DATA 0,0,0		0
KTRUE	EQU  $
KMINUS	EQU  $
KLOCAL	EQU  $
KONE	DATA 1			1
KTWO	DATA 2			2
KTHREE	DATA 3			3
KLGPRE	EQU  $
KFOUR	DATA 4			4
KRLPRE	EQU  $			PRECEDENCE OF RELATIONAL OPERATOR
KFIVE	DATA 5			5
KSEVEN	DATA 7			7
KEIGHT	DATA 8			8
KTWELV	DATA 12			12
KSXTEE	DATA 16			16
KMONE	DATA -1			-1
*
KMAXCO	DATA 14
KMAXDM	DATA RGDUMM/2
KMAXLC	DATA RCTEMP/2
KMAXPT	DATA RACCUM/2
KDEFLB	DATA >1000
KADRFL	DATA MADRFL		ADDRESS FIELD MASK
TMISUS	EQU  $			MISUSED LABEL FLAG (ON LABEL STACK)
KTAGFL	DATA MTAGFL		TAG FIELD MASK
KOPFLD	DATA MOPCFL		OPERATOR FIELD MASK
*
KBLANK  DATA >0020		LOW BLANK
KBLANS	DATA >2020		TWO BLANKS (ASCII)
KOVPCQ	DATA QOVFLO
*
KBASES	DATA 256
*
MBLANK	EQU  $
KMARKE	DATA >DB84,>DB84,>DB84
*
MH	DATA >6AA1
MN	DATA >8E47
MLOBLK	DATA >05A0		MOD 39 LOW BLANK
K39SQ	DATA >05F1		MOD 39 BLANKS
*
TDBYTE	DATA BYTYPE		TAG FOR BYTE
KX100	EQU  $
TDUMMY	EQU  $			DUMMY ARRAY FLAG    (ON ARRAY STACK)
TEXEC	EQU  $
X100	DATA >0100
TSREAL	DATA SPTYPE		TAG FOR S.P.
TADJUS	EQU  $			ADJUS DIMEN ARRAY FLAG (ON ARRAY STACK)
TFORMA	EQU  $			FORMAT LABEL FLAG (ON LABEL STACK)
TDREAL	DATA DPTYPE		TAG FOR REAL *8
TINTEG	DATA INTYPE		TAG FOR INTEGER *2
TDINT4	DATA I4TYPE		TAG FOR INTEGER *4
TLOGIC	DATA LGTYPE		TAG FOR LOGICAL *2
TC8TYP	DATA C8TYPE		TAG FOR COMPLEX *8
TC6TYP	DATA C6TYPE		TAG FOR COMPLEX *16
*
PCTEMP	BLDCMF RCTEMP		TEMPORARY POINTER
PATEMP	BLDCMF RATEMP		ADDRESS TEMPORARY POINTER
PACCUM	BLDCMF RACCUM		ACCUMULATOR RESULT POINTER
PALLOC	BLDCMF RALLOC		FIRST GROUP ON RALLOC STACK
PARRAY	BLDCMF RARRAY		FIRST GROUP ON RARRAY STACK
PARYEL	BLDCMF RASTAT		ARRAY ELEMENT POINTER
PEXPON	BLDCMF REXPON		START OF REXPON STACK
PMLABE	BLDCMF RMLABE		MADE LABEL POINTER
PSCLR0	BLDCMF RSCALE		FIRST GROUP ON RSCALE STACK
*
XF	DATA >F			LO NIBBLE MASK
X3FF	DATA >3FF		A MASK
X7FF	DATA >7FF		A MASK
XFF00   DATA >FF00		HI BYTE MASK
XFF80	DATA >FF80		OPCODE AND TYPE FIELD MASK
XFFFE	DATA >FFFE		A MASK (MAKE ADDRESS EVEN)
*
*  Operator Drivers.
*
*  The operand field (bits 0-5) holds index number.
*  The tag field (bits 6-8) is set to highest operand type
*  The address field (bits 8-15) holds precedence of operator
*
*  Note that although DSPROG has the highest precedence, its adr field
*  contains 0.  This is because EXPRSC, the only routine requiring
*  precedence information, treats subprograms as elements.  The address
*  field of DSPROG is used to indicate the number of arguments the
*  subprogram has.
*
*
DEOR	BLDOPF RACCUM,1,1		.EOR.
DOR	BLDOPF RACCUM,2,2		.OR.
DAND	BLDOPF RACCUM,3,3		.AND.
DNOT	BLDOPF RACCUM,4,4		.NOT.
DEQ	BLDOPF RACCUM,5,5		.EQ.
DNE	BLDOPF RACCUM,6,5		.NE.
DLT	BLDOPF RACCUM,7,5		.LT.
DGT	BLDOPF RACCUM,8,5		.GT.
DLE	BLDOPF RACCUM,9,5		.LE.
DGE	BLDOPF RACCUM,10,5		.GE.
DSUB	BLDOPF RACCUM,11,6		+
DADD	BLDOPF RACCUM,12,6		-
DMULT	BLDOPF RACCUM,13,7		/
DDIV	BLDOPF RACCUM,14,7		*
DEXPON  BLDOPF RACCUM,15,8		**
DUMINU	BLDOPF RACCUM,16,9		(-X)
DSPROG	BLDOPF RACCUM,17,0
*
BLDOPJ	MACRO
	DATA %1*128
	ENDM
*
JCLE	BLDOPJ CLE		<=
JCLT	BLDOPJ CLT		<
JCGE	BLDOPJ CGE		>=
JCGT	BLDOPJ CGT		>
JCNE	BLDOPJ CNE		!=
JCOR	BLDOPJ COR		|
*
ICGTEX	DATA CCGTEX*128		COMPUTED GOTO
IENDAT	DATA >5700		IENDAT
IENDLG	DATA >5800		IENDLG
ILIST	DATA >5900		ILIST
INOLIS	DATA >5901		INOLIST
IDATA	DATA >53FF		IDATA (5400 to 54FF)
*
IABS	DATA >5F00		ABS R5
IANDK1	DATA >6000		AND with 1
ISETST	DATA >6100		Compare to zero
IAR5R5	DATA >6200		A R5,R5
IAR5R1	DATA >6300		A R5,R1
IINCR5	DATA >6400		INCREMENT R5
IAR1R5	DATA >6500		A   R1,R5
ICLRR5	DATA >6600		CLR R5
IMR5R1	DATA >6700		MOV R5,R1
ISETEQ	DATA >6800		.EQ.
JABS	DATA >6900		INTEGER *4 ABSOLUTE
IINVR5	DATA >6A00		INV R5
ISETI4	DATA >6C00		SET STATUS (INTEGER *4)
ICHSIG	DATA >6F00		CHANGE SIGN (BASE FOR OTHERS)
ICONVR	DATA >7000		CONVERT     (BASE FOR OTHERS)
*
ICHRIO	DATA >2700		CHARACTER I/O
ISTOPI	DATA >4100		ISTOPIO
ISTRTI	DATA >4200		ISTRTIO
ISTOP	DATA >4300		ISTOP
IPAUSE	DATA >4400		IPAUSE
IRETUR	DATA >4500		IRETURN
ISTOPN	DATA >4600		ISTOPN
INDSCH	DATA >4C00		INDSCHK
IMUL4K	DATA >7800		IMUL4K
IMUL8K	DATA >7900		IMUL8K
	ENDIF
*
* POP ADDRESSABLE QUOTE BASE
*
	LIST
	IFEQ PASS1
	DORG 0
	ENDIF
*
	UNL
	IFLT PASS1-3
	LIST
QTB	EQU  $
QACCEP	TEXT 'ACCEPT* '
QAND	TEXT 'AND.* '
QBQ	TEXT 'B''* '
QBYTE	TEXT 'BYTE* '
QCALL	TEXT 'CALL* '
QCHARA	TEXT 'CHARACTER*'
QCOMMO	TEXT 'COMMON* '
QCOMPL	TEXT 'COMPLEX*'
QCONTI	TEXT 'CONTINUE* '
QDATA	TEXT 'DATA* '
QDIMEN	TEXT 'DIMENSION*'
QDBLPR	TEXT 'DOUBLEPRECISION*'
QDO	TEXT 'DO* '
QDOWHI	TEXT 'DOWHILE(* '
QELSE	TEXT 'ELSE* '
QELSEI	TEXT 'ELSEIF(*'
QEND	TEXT 'END*'
QENDDO	TEXT 'ENDDO*'
QENDIF	TEXT 'ENDIF*'
QENDEQ	TEXT 'END=* '
QENTRY  TEXT 'ENTRY*'
QEOR	TEXT 'EOR.* '
QERR	TEXT 'ERR=* '
QEQ	TEXT 'EQ.*'
QEQUIV	TEXT 'EQUIVALENCE*'
QEXTER	TEXT 'EXTERNAL* '
QFALSE	TEXT 'FALSE.* '
QFORMA	TEXT 'FORMAT(*'
QFUNC	TEXT 'FUNCTION* '
QGE	TEXT 'GE.*'
QGOTO	TEXT 'GOTO* '
QGT	TEXT 'GT.*'
QIF	TEXT 'IF(*'
QIMPLI	TEXT 'IMPLICIT* '
QINCLU	TEXT 'INCLUDE*'
QINTEG	TEXT 'INTEGER*'
QIOSTA  TEXT 'IOSTAT=*'
QLE	TEXT 'LE.*'
QLIST	TEXT '/LIST''* '
QLOGIC	TEXT 'LOGICAL*'
QLT	TEXT 'LT.*'
QNE	TEXT 'NE.*'
QNOLIS	TEXT '/NOLIST''* '
QNOT	TEXT 'NOT.* '
QOQ	TEXT 'O''* '
QOR	TEXT 'OR.*'
QPAUSE	TEXT 'PAUSE*'
QPRINT	TEXT 'PRINT*'
QPROGR	TEXT 'PROGRAM*'
QREAD	TEXT 'READ(*'
QREAD1	TEXT 'READ* '
QREAL	TEXT 'REAL* '
QREC	TEXT 'REC=* '
QREPEA  TEXT 'REPEAT* '
QRETUR	TEXT 'RETURN* '
QSTATU	TEXT 'STATUS=*'
QSTOP	TEXT 'STOP* '
QSUBR	TEXT 'SUBROUTINE* '
QTYPES	TEXT 'TYPE* '
QTHEN	TEXT 'THEN* '
QTRUE	TEXT 'TRUE.*'
QWRITE	TEXT 'WRITE(* '
QZQ	TEXT 'Z''* '
	ENDIF
*
*  FOR FORTRAN1:
*
	UNL
	IFEQ PASS1-1
	LIST
*
AHEXSC	DATA HEXSCA		SCAN A HEX CONSTANT ROUTINE
AEXFAL	DATA EXITFA		EXIT FALSE ROUTINE
AEXIT 	DATA EXIT		EXIT (SUBR RETURN) ROUTINE
AFAIL 	DATA FAIL		EXIT FAIL SCAN ROUTINE
AGENCO	DATA GENFLC		GEN CONSTANT ROUTINE
AINTER	DATA INTERP		INTERPRETE START ROUTINE
ALDGRP	DATA LOADGR		LOAD GROUP ROUTINE
ANXSTM	DATA NEXTST		GET NEXT STATEMENT ROUTINE
ANXTCH	DATA NEXTCH		GET NEXT CHAR ROUTINE
APUNCH	DATA PUNCH		PUNCH SCR 2 ROUTINE
AP2INI	DATA P2INIT		PART 2 INIT ROUTINE
ASTATU	DATA STATUE		STATEMENT SCAN START ROUTINE
ASYMSC	DATA SYMSCA		SYMBOL SCAN ROUTINE
ATAILS	DATA TAILST		TAILS START ROUTINE
A1STLT	DATA FIRSTL		GET 1ST LETTER OF SYMBOL ROUTINE
ADRIVE	DATA DRIVEX		DRIVING TABLE EXECUTE ROUTINE
AOPTSA	DATA OPSTAX		SET OPTION ROUTINE
AOVERF	DATA OVERFX		GENERATE OVERFLOW ERROR ROUTINE
AOCTSC  DATA OCTSCA		OCTAL SCAN
ABINSC  DATA BINSCA		BINARY SCAN
*
*
	TITL 'STACK CODES'
	PAGE
CODE	MACRO
	DATA %1*32+%2*32+%3*2
*	DATA %1*16+%2*16+%3
	ENDM
*
*  RC - STACK CODES.   THIS TABLE IS A PARALLEL TABLE ORGANIZED BY
*	STACK NUMBER, AND CONTAINS THE FOLLOWING:
*
*	CLUESIZE     :  THE SIZE OF THE CLUE IF I AM SEARCHING TO TRY AND
*		        FIND A MATCH (E.G. SAVING GENERATION OF DUPLICATE
*		        CONSTANTS).
*
*	DISPLACEMENT :  THE OFFSET INTO THE PCENTRA AREA WHERE THE ARGUMENT
*			IS STORED (IN WORDS).
*
*	GROUPSIZE    :  THE ACTUAL SIZE OF AN ENTRY IN THE STACK, IN WORDS.
*
RC	EQU  $
*	CODE CLUESIZE,DISPLACEMENT,GROUPSIZE
	CODE 0,0,1		00 REXPON
	CODE 2,0,4		02 RINTRI
	CODE 2,0,4		04 RINTR1
	CODE 1,0,1		06 ROPTIO
	CODE 0,0,0		08 RINPUT
	CODE 0,0,0		0A RBUFFE
	CODE 0,0,6		0C RCODE
	CODE 0,0,4		0E RPROLO, RERRSY
	CODE 0,0,6		10 RTEMP
	CODE 0,0,0		12 REXIT
	CODE 0,0,0		14 RWORK
	CODE 0,0,0		16 RPOLIS
	CODE 0,0,0		18 RPTRS
	CODE 0,0,0		1A RDOLOO
	CODE 0,0,6		1C RTEMP1
	CODE 0,0,0		1E RREFLB
	CODE 2,4,2		20 RDELTA
	CODE 2,4,2		22 RMODPT
	CODE 1,5,1		24 REXEC
	CODE 2,4,2		26 RLABEL
	CODE 0,0,0		28 RMLABE
	CODE 1,5,1		2A RFXCON
	CODE 1,5,1		2C RBYCON
	CODE 2,3,2		2E RI4CON
	CODE 2,3,2		30 RSPCON
	CODE 4,3,4		32 RDPCON
	CODE 4,3,4		34 RC8CON
	CODE 8,3,8		36 RC6CON
	CODE 0,0,1		38 RHOLVA
	CODE 0,0,0		3A RCTEMP
	CODE 0,0,0		3C RATEMP
	CODE 3,0,4		3E RLDUMM
	CODE 3,0,3		40 RGDUMM
	CODE 3,0,3		42 RSCALE
	CODE 3,0,3		44 RGSPRG
	CODE 3,0,5		46 RARRAY
	CODE 3,0,3		48 RPROGR
	CODE 3,0,4		4A RLSPRO
	CODE 0,0,0		4C RACCUM
	CODE 0,0,1		4E RASTAT
	CODE 3,0,6		50 RALLOC
	CODE 3,0,3		52 RCOMMO
	CODE 3,0,4		54 RCMNAM
	CODE 3,0,7		56 RCMARE
	CODE 3,0,4		58 RPOINT
	CODE 3,0,3		5A RINTEG
	CODE 3,0,3		5C RBYTE
	CODE 3,0,3		5E RINTE4
	CODE 3,0,3		60 RSREAL
	CODE 3,0,3		62 RDREAL
	CODE 3,0,3		64 RCMPLX
	CODE 3,0,3		66 RCMPL6
	CODE 3,0,3		68 RLOGIC
	CODE 3,0,4		6A REQUIV
	CODE 3,0,4		6C REXTER
	CODE 1,3,2		6E RIMPLI
	CODE 0,0,0		70 RIF
*
	ENDIF
	LIST
