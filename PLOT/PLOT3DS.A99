	TITL  'HI-RES SUPPORT'
	IDT   'PLOTTR'
*
**Hi-Res 3D-Plotter Bitmap Mode**
*      ELMER B. CLAUSEN
*      100 SEGSBURY ROAD
*      BUFFALO,NY   14221  JAN 1990
	DEF  PLOT3D
PDATA	BSS  1976	  PLOT DATA TABLE
SDATA	BSS  256	   SHADOW TABLE
WDATA	BSS  152	   WORKING TABLE
VWTR	EQU  >2054	 VDP WRITE REGISTERS
VSBW	EQU  >2044	 VDP SINGLE BYTE WRITE
VSBR	EQU  >204C	 VDP SINGLE BYTE READ
TX	DATA >8040,>2010,>0804,>0201
SETBM	DATA >0002,>01E0,>0206,>03FF  VDP SETUP TABLE
	DATA >0403,>0506,>0600,>07F5
SVRTN	DATA 0
OFFSET	DATA 0
COUNT	DATA 0
ONE	DATA 1
*
PLOT3D	DATA -1	    		1 ARGUMENT
	DATA BASEAD		TEMPDATA AREA
	MOV  R10,@SVRTN   	SAVE R10
* SET UP WORKSPACE
* ENTER PLOT DATA AND SHIFT Y
	LI   R2,PDATA     	PLOT TABLE ADDRESS
	MOV  @Z,R0	 	INPUT Z VECTOR ADDRESS
	CLR  R3	    		ZERO Y DISPLACEMENT
	LI   R4,26	 	26 SLICES
DAT1	LI   R5,76	 	76 DOUBLE POINTS
DAT2	MOV  *R0+,R6      	Y-DATA NUMBER
	A    R3,R6	 	ADD DISPLACEMENT
	NEG  R6	      		Y-DATA TO
	AI   R6,191	   	Y-PLOT
	SWPB R6	    		NUMBER TO BYTE
	MOVB R6,*R2+      	SAVE DISPLACED Y
	DEC  R5	    		LAST LINE VALUE ?
	JNE  DAT2	  	IF NO,NEXT Y
	AI   R3,3	  	INCREMENT DISPLACEMENT
	DEC  R4	    		LAST SLICE ?
	JNE  DAT1	  	IF NO, NEXT SLICE
* SET UP THE BITMAP MODE
	LI   R1,SETBM
	LI   R2,8
VDPW1	MOV  *R1+,R0
	BLWP @VWTR
	DEC  R2
	JNE  VDPW1
	LI   R0,>1800     	INITIALIZE SCREEN IMAGE TABLE
	CLR  R2
L1	CLR  R1
L2	BLWP @VSBW
	INC  R0
	AI   R1,>0100
	CI   R1,0
	JNE  L2
	INC  R2
	CI   R2,3
	JNE  L1
	CLR  R0			CLEAR PATTERN DESCRIPTOR TABLE
	CLR  R1			AND FILL COLOR TABLE
L3	BLWP @VSBW
	INC  R0
	CI   R0,>1800
	JNE  L3
	LI   R0,>2000
	LI   R1,>1717		BLACK ON CYAN
L4	BLWP @VSBW
	INC  R0
	CI   R0,>3800
	JNE  L4
	LI   R0,>1B00     	DISABLE SPRITES
	LI   R1,>D000
	BLWP @VSBW
* FRAME INITIALIZATION
	LI   R0,SDATA     	SHADOW ADDRESS
	LI   R1,>BFBF     	BYTES 191,191
	LI   R2,128		256 BYTES
FRMI	MOV  R1,*R0+      	ZERO 2 BYTES
	DEC  R2	    		LAST WORD ?
	JNE  FRMI	  	IF NO, DO AGAIN
* DRAW SCALE GUIDES
	LI   R10,4	 	X1
	LI   R12,0	 	Y1 VERTICAL SCALE
	LI   R13,4	 	X2
	LI   R14,116      	Y2
	BL   @PXY
	LI   R13,104      	X2 SLANT SCALE
	LI   R14,191      	Y2
	BL   @PXY
	LI   R13,254      	X2 HORIZONTAL SCALE
	LI   R14,191      	Y2
	BL   @PXY
* MAIN PLOT PROCEDURE, INITIALIZE LOOP
	LI   R6,PDATA     	INPUT TABLE ADDRESS
	LI   R3,104
	MOV  R3,@OFFSET   	LH LINE OFFSET
* FILL WORKING TABLE, INTERPOLATE
F1	LI   R0,WDATA     	WORKING TABLE ADDRESS
	LI   R1,75	 	HALF POINT NUMBER
	MOVB *R6+,R4	 	Y0
	MOVB R4,*R0		Y BYTE
	SRL  R4,8	  	Y0 NUMBER
F2	MOVB *R6+,R5      	Y2N
	INCT R0	    		STEP 2 BYTES
	MOVB R5,*R0		Y BYTE
	SRL  R5,8	  	Y2N NUMBER
	A    R5,R4
	SRL  R4,1	  	AVG Y
	SWPB R4
	DEC  R0	    		YN BYTE
	MOVB R4,*R0+
	MOV  R5,R4	 	OLD Y2N
	DEC  R1	    		LAST Y POINT ?
	JNE  F2	    		IF NO, ANOTHER POINT
* PLOT WORKING FRAME
	LI   R0,150		150 POINTS
	MOV  R0,@COUNT    	COUNT=150
	LI   R15,WDATA    	TABLE ADDRESS
	MOV  @OFFSET,R10  	X1
	MOVB *R15+,R12    	Y BYTE
	SRL  R12,8	 	Y1
F3	MOV  R10,R13
	INC  R13	   	X2
	MOVB *R15+,R14    	Y BYTE
	SRL  R14,8	 	Y2
	BL   @PXY	  	PLOT LINE
	S    @ONE,@COUNT  	COUNT-1
	MOV  @COUNT,@COUNT  	LAST SEGMENT?
	JNE  F3	    		IF NO, 	DO AGAIN
* UPDATE SHADOW FRAME
	LI   R0,WDATA     	TABLE ADDRESS
	LI   R1,SDATA
	A    @OFFSET,R1   	SHADOW ADDRESS
	LI   R7,151		151 POINTS
F4	MOVB *R0+,R4
	SRL  R4,8	  	WDATA
	MOVB *R1+,R5
	SRL  R5,8	  	SDATA
	C    R4,R5	 	IN SHADOW ?
	JGT  F5	    		YES, CONTINUE
	SWPB R4	    		NO, UPDATE SHADOW
	DEC  R1
	MOVB R4,*R1+
F5	DEC  R7	    		LAST POINT ?
	JNE  F4	    		IF NO, NEXT POINT
	LI   R0,-4
	A    R0,@OFFSET   	UPDATE OFSET
	MOV  @OFFSET,@OFFSET  	LAST FRAME ?
	JNE  F1	    		IF NO, NEXT FRAME
* TIME DELAY TO VIEW PLOT
	LI   R0,10000
LDLY1	LI   R1,100
LDLY2	DEC  R1
	JNE  LDLY2
	DEC  R0
	JNE  LDLY1
* RETURN TO 99 FORTRAN
	MOV  @SVRTN,R10   	RESTORE R10
	MOV  @BASEAD,R3   	RESTORE BASE R3
	MOV  @RETUAD,R11  	RESTORE RETURN R11
	B    *R11	  	RETURN
BASEAD	BSS  2	     		CALLER'S R3
RETUAD	BSS  2	     		RETURN ADDRESS
Z	BSS  2	     		FIRST ARGUMENT ADDRESS
*
*PLOT (X,Y):X1=R10,Y1=R12,X2=R13,Y2=R14,USES R2,R3
*0<=X<=255 RT TO LFT, 191<=Y<=0 UPWARDS
*NOTE:PIXEL USES R0,R1,R4,R5,R7,R8,R9
*     LEAVING R6,R15     	FREE FOR CALLING PROGRAM
SGNX	DATA 0
SGNY	DATA 0
X2	DATA 0
Y2	DATA 0
SVXYR	DATA 0	     		SAVE R11
PXY	MOV R11,@SVXYR    	SAVE RETURN
	LI   R0,1
	MOV  R0,@SGNX     	SIGN(DX) (NEG)
	MOV  R0,@SGNY     	SIGN(DY) (NEG)
	MOV  R13,@X2      	SAVE X
	MOV  R13,R2		X2
	S    R10,R2		DX=X2-X1
	CI   R2,0
	JLT  PLT7	  	DX<0
	CLR  @SGNX	 	DX>=0
PLT7	ABS  R2
	MOV  R2,R13		ABS(DX)
	SLA  R2,6	  	DELX=64*DX
	MOV  R14,@Y2      	SAVE Y
	MOV  R14,R3		Y2
	S    R12,R3		DY=Y2-Y1
	CI   R3,0
	JLT  PLT8	  	DY<0
	CLR  @SGNY	 	DY>=0
PLT8	ABS  R3
	MOV  R3,R14		ABS(DY)
	SLA  R3,6	  	DELY=64*DY
	C    R13,R14
	JGT  PLT4	  	ABS(DX)>ABS(DY)
	MOV  R14,R13      	MAX DELTA
PLT4	CI   R13,0	 	SINGLE POINT?
	JEQ  PLT3	  	IF YES, NEXT THETA
	CLR  R4
	MOV  R2,R5	 	DELX
	DIV  R13,R4		DELX/DELTA
	MOV  R4,R2	 	DELTX
	CLR  R4
	C    @SGNX,R4
	JEQ  PLT9	  	+DX
	NEG  R2	    		-DX
PLT9	MOV  R3,R5	 	DELY
	DIV  R13,R4		DELY/DELTA
	MOV  R4,R3	 	DELTY
	MOV  @SGNY,@SGNY
	JEQ  PLT10	 	+DY
	NEG  R3	    		-DY
PLT10	SLA  R10,6	 	64*X1
	SLA  R12,6	 	64*Y1
PLT5	A    R2,R10		X+/-DX
	A    R3,R12		Y+/-DY
	MOV  R10,R8
	SRL  R8,6	  	X
	MOV  R12,R9
	SRL  R9,6	  	Y
	BL   @PIXEL		PLOT(X,Y)
	DEC  R13	   	LAST POINT?
	JNE  PLT5	  	IF NO, DO IT AGAIN
PLT3	MOV  @X2,R10      	NEW X1
	MOV  @Y2,R12      	NEW Y1
	MOV  R10,R8		X
	MOV  R12,R9		Y
	BL   @PIXEL		PLOT(X,Y)
	MOV  @SVXYR,R11   	RESTORE RETURN
	RT
PIXEL	MOVB @SDATA(R8),R7 	YS BYTE
	SRL  R7,8	   	YS NUMBER
	C    R9,R7	 	INVISIBLE ?
	JGT  PX1	   	IF YES, RETURN
	MOV  R9,R4	 	PIXEL(COL,ROW)=PIXEL(R8,R9)
	SLA  R4,5	  	USES R0,R1,R4,R5,R7
	SOC  R9,R4
	ANDI R4,>FF07
	MOV  R8,R5
	ANDI R5,7
	A    R8,R4
	S    R5,R4
	MOV  R4,R0
	BLWP @VSBR
	LI   R7,TX
	A    R5,R7
	SOCB *R7,R1
	BLWP @VSBW
PX1    	RT
	END
